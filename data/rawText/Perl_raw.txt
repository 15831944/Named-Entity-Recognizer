 about theu800 programming language good article infobox programming language name perl logo file programming-republic-ofu800-perlu82epngu800 paradigm multi-paradigm functional programming functional imperative programming imperative object-oriented programming object-oriented class-based programming class-based reflective programming reflective procedural programming procedural data-driven programming data-driven generic programming generic year 1987 designer larry wall developer larry wall latest_release_version 5u800u82e18u800u82e1u800 cite webu800 urlu800 title perl 5u800u82e18u800u82e1u800 isu800 nowu800 available accessdate 2013-08u800-12u800 publisher perlu82eorgu800 latest_release_date release date mfu800 yesu800 2013 08u800 12u800 latest preview version 5u800u82e19u800u82e3u800 cite webu800 urlu800 title steve hayu800 perl-5u800u82e19u800u82e3u800 publisher metacpanu82eorgu800 date accessdate 2013-08u800-20u800 latest preview date release date mfu800 yesu800 2013 08u800 20u800 turing-complete yesu800 typing dynamic influenced_by awku800 programming language awku800 smalltalk 80u800 lisp programming language lisp cu800 programming language cu800 cu800 sedu800 unix shell pascal programming language pascal influenced python programming language python phpu800 ruby programming language ruby ecmascript lpcu800 programming language lpcu800 windows powershell javascript falcon programming language falcon perl 6u800 qore language qore programming_language cu800 programming language cu800 operating_system cross-platform license gnuu800 general public license oru800 artistic license cite webu800 urlu800 title perl licensing accessdate 2011-01u800-08u800 publisher devu800u82eperlu82eorgu800 website urlu800 file_ext .plu800 .pmu800 .tu800 .podu800 citation needed date july 2013 wikibooks perl programming  perl  isu800 au800 family ofu800 high-level programming language high-level general-purpose programming language general-purpose interpreter computing interpreted dynamic programming language languages. theu800 languages inu800 this family include perl 5u800 andu800 perl 6u800. cite webu800 urlu800 title about perl accessdate 2013-04u800-20u800 publisher perlu82eorgu800 quote perl isu800 au800 family ofu800 languages perl 6u800 isu800 part ofu800 theu800 family butu800 itu800 isu800 au800 separate language which hasu800 itsu800 ownu800 development team. itsu800 existence hasu800 nou800 significant impact onu800 theu800 continuing development ofu800 perl 5u800 . though perl isu800 notu800 officially anu800 acronym cite webu800 last lapworth first leou800 title general questions about perl urlu800 work perl faqu800 publisher perlu82eorgu800 accessdate 24u800 february 2012 there areu800 various backronym backronyms inu800 useu800 such asu800  practical data extraction extraction andu800 reporting language . cite webu800 urlu800 title perl 1u800 practical extraction report language - linux manu800 page publisher linuxu82edieu800u82enetu800 date accessdate 2013-07u800-23u800 perl wasu800 originally developed byu800 larry wall inu800 1987 asu800 au800 general-purpose unix scripting language tou800 make report processing easier. cite webu800 urlu800 title beginner beginner'su800 introduction tou800 perl accessdate 2011-01u800-08u800 last sheppard first doug date 2000-10u800-16u800 publisher devu800u82eperlu82eorgu800 since then itu800 hasu800 undergone many changes andu800 revisions. theu800 latest major stable revision ofu800 perl 5u800 isu800 5u800u82e18u800 released inu800 mayu800 2013. perl 6u800 which began asu800 au800 redesign ofu800 perl 5u800 inu800 2000 eventually evolved into au800 separate language. both languages continue tou800 beu800 developed independently byu800 different development teams andu800 liberally borrow ideas from oneu800 another. theu800 perl languages borrow features from other programming languages including cu800 programming language cu800 shell script scripting bourne shell shu800 awku800 programming language awku800 andu800 sedu800 . cite webu800 urlu800 title theu800 timeline ofu800 perl andu800 itsu800 culture v3u800u82e0_0505 author ashton elaine year 1999 they provide powerful text processing facilities without theu800 arbitrary data-length limits ofu800 many contemporary unix commandline tools cite book title programming perl third edition author larry wall wall larry tomu800 christiansen andu800 jonu800 orwant publisher ou800'reilly media month july year 2000 isbn 0u800-596u800-00027-8u800 facilitating easy manipulation ofu800 text file files. perl 5u800 gained widespread popularity inu800 theu800 late 1990s asu800 au800 common gateway interface cgiu800 scripting language inu800 part dueu800 tou800 itsu800 parsing abilities. cite book last1 smith first1 roderick wu800. title advanced linux networking publisher addison-wesley professional date 21u800 junu800 2002 year 2002 page 594u800 accessdate 2011-01u800-08u800 isbn 978u800-0u800-201u800-77423-8u800 inu800 addition tou800 cgiu800 perl 5u800 isu800 used foru800 computer graphics computer science graphics programming system administrator system administration computer network programming network programming finance bioinformatics andu800 other applications. itu800 itu800'su800 nicknamed theu800 swiss army chainsaw -- note tou800 editors. this should read chainsaw notu800 knife. check theu800 refu800 -- ofu800 scripting languages because ofu800 itsu800 flexibility andu800 power cite webu800 urlu800 title beginner beginner'su800 introduction tou800 perl accessdate 2008-07u800-27u800 last sheppard first doug date 2000-10u800-16u800 publisher ou800'reilly media andu800 possibly also because ofu800 itsu800 perceived ugliness . cite webu800 urlu800 title swiss army chainsaw work theu800 jargon file accessdate 2u800-12u800-09u800-13u800 last raymond first eric date 2003-12u800-23u800 inu800 1998 itu800 wasu800 also referred tou800 asu800 theu800 duct tape that holds theu800 internet together inu800 reference tou800 itsu800 ubiquitous useu800 asu800 au800 glue language andu800 perceived inelegance. cite webu800 urlu800 title theu800 joyu800 ofu800 perl accessdate 2012-06u800-05u800 last leonard first andrew publisher salonu82ecomu800 history history history early versions early versions early versions wall began work onu800 perl inu800 1987 while working asu800 au800 programmer atu800 unisys andu800 released version 1u800u82e0u800 tou800 theu800 compu82esourcesu82emisc newsgroup onu800 december 18u800 1987. cite newsgroup author larry wall title v13i001 perl au800 replacement foru800 awku800 andu800 sedu800 part01 10u800 date 1988-02u800-01u800 newsgroup compu82esourcesu82eunix idu800 urlu800 accessdate 2011-01u800-13u800 theu800 language expanded rapidly over theu800 next fewu800 years. perl 2u800 released inu800 1988 featured au800 better regular expression engine. perl 3u800 released inu800 1989 added support foru800 binary data streams. originally theu800 only documentation foru800 perl wasu800 au800 single increasingly lengthy manu800 page . inu800 1991   programming perl   known tou800 many perl programmers asu800 theu800 camel book because ofu800 itsu800 cover wasu800 published andu800 became theu800  deu800 facto  reference foru800 theu800 language. atu800 theu800 same time theu800 perl version number wasu800 bumped tou800 4u800 notu800 tou800 mark au800 major change inu800 theu800 language butu800 tou800 identify theu800 version that wasu800 well documented byu800 theu800 book. early perl 5u800 early perl 5u800 early perl 5u800 perl 4u800 went through au800 series ofu800 maintenance release releases culminating inu800 perl 4u800u82e036u800 inu800 1993. atu800 that point wall abandoned perl 4u800 tou800 begin work onu800 perl 5u800. initial design ofu800 perl 5u800 continued into 1994. theu800  perl5-porters  mailing list wasu800 established inu800 mayu800 1994 tou800 coordinate work onu800 porting perl 5u800 tou800 different platforms. itu800 remains theu800 primary forum foru800 development maintenance andu800 porting ofu800 perl 5u800. cite webu800 urlu800 title perlu82eperl5u82eporters archive accessdate 2011-01u800-13u800 publisher perlu82eorgu800 perl 5u800u82e000u800 wasu800 released onu800 october 17u800 1994. cite webu800 urlu800 title perlhist - theu800 perl history records accessdate 2011-01u800-21u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 itu800 wasu800 au800 nearly complete rewrite ofu800 theu800 interpreter computing interpreter andu800 itu800 added many newu800 features tou800 theu800 language including object computer science objects reference computer science references local variable lexical myu800 variables andu800 module programming modules . importantly modules provided au800 mechanism foru800 extending theu800 language without modifying theu800 interpreter. this allowed theu800 core interpreter tou800 stabilize even asu800 itu800 enabled ordinary perl programmers tou800 addu800 newu800 language features. perl 5u800 hasu800 been inu800 active development since then. perl 5u800u82e001u800 wasu800 released onu800 march 13u800 1995. perl 5u800u82e002u800 wasu800 released onu800 february 29u800 1996 with theu800 newu800 prototypes feature. this allowed module authors tou800 make subroutine subroutines that behaved like perl shell builtin builtins . perl 5u800u82e003u800 wasu800 released june 25u800 1996 asu800 au800 security release. oneu800 ofu800 theu800 most important events inu800 perl 5u800 history took place outside ofu800 theu800 language proper andu800 wasu800 au800 consequence ofu800 itsu800 module support. onu800 october 26u800 1995 theu800 comprehensive perl archive network cpan wasu800 established asu800 au800 software repository repository foru800 perl module modules andu800 perl itself; asu800 ofu800 april 2012 itu800 carries over 24u800 500u800 modules byu800 more than 9u800 500u800 authors. cite webu800 urlu800 title cpan accessdate 2012-04u800-14u800 publisher cpan perl 5u800u82e004u800 wasu800 released onu800 mayu800 15u800 1997 andu800 included among other things theu800 universal package giving perl au800 base object tou800 which allu800 class computer programming classes were automatically derived andu800 theu800 ability tou800 require versions ofu800 modules. another significant development wasu800 theu800 inclusion ofu800 theu800 cgiu800u82epmu800 module cite webu800 urlu800 title perl5004delta - what what'su800 newu800 foru800 perl5u82e004u800 accessdate 2011-01u800-08u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 which contributed tou800 perl perl'su800 popularity asu800 au800 cgiu800 scripting language. cite book last1 patwardhan first1 nathan last2 siever first2 ellen last3 spainhour first3 stephen title perl inu800 au800 nutshell second edition publisher ou800'reilly media year 2002 accessdate 2011-01u800-08u800 isbn 978u800-0u800-596u800-00241-1u800 perl also nowu800 supported running under microsoft windows andu800 several other operating systems. perl 5u800u82e005u800 wasu800 released onu800 july 22u800 1998. this release included several enhancements tou800 theu800 regular expression regex engine newu800 hooks into theu800 backend through theu800 bu800 modules theu800 qru800 regex quote operator au800 large selection ofu800 other newu800 core modules andu800 added support foru800 several more operating systems including beos . cite webu800 urlu800 title perl5005delta - what what'su800 newu800 foru800 perl5u82e005u800 accessdate 2011-01u800-21u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 2000u8e28093present 2000u8e28093present 2000u8e28093present perl 5u800u82e6u800 wasu800 released onu800 march 22u800 2000. major changes included 64u800-bitu800 computing 64u800-bitu800 support unicode string representation large file support iu800u82eeu800. files over 2u800 gibu800 andu800 theu800 ouru800 keyword. cite webu800 urlu800 title perl56delta - what what'su800 newu800 foru800 perl v5u800u82e6u800u82e0u800 accessdate 2011-01u800-21u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 cite webu800 urlu800 title perl56delta - what what'su800 newu800 foru800 perl v5u800u82e6u800u82exu800 accessdate 2011-01u800-21u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 when developing perl 5u800u82e6u800 theu800 decision wasu800 made tou800 switch theu800 software versioning versioning scheme tou800 oneu800 more similar tou800 other open source projects; after 5u800u82e005_63 theu800 next version became 5u800u82e5u800u82e640u800 with plans foru800 development versions tou800 have oddu800 numbers andu800 stable versions tou800 have even numbers. inu800 2000 wall putu800 forth au800 call foru800 suggestions foru800 au800 newu800 version ofu800 perl from theu800 community. theu800 process resulted inu800 361u800 rfcu800 request foru800 comments documents which were tou800 beu800 used inu800 guiding development ofu800 perl 6u800. inu800 2001 cite webu800 urlu800 title apocalypse 1u800 theu800 ugly theu800 badu800 andu800 theu800 good accessdate 2011-01u800-08u800 last wall first larry work began onu800 theu800 apocalypses foru800 perl 6u800 au800 series ofu800 documents meant tou800 summarize theu800 change requests andu800 present theu800 design ofu800 theu800 next generation ofu800 perl. they were presented asu800 au800 digest ofu800 theu800 rfcs rather than au800 formal document. atu800 this point perl 6u800 existed only asu800 au800 description ofu800 au800 language. perl 5u800u82e8u800 wasu800 first released onu800 july 18u800 2002 andu800 hadu800 nearly yearly updates since then. theu800 latest version ofu800 perl 5u800u82e8u800 isu800 5u800u82e8u800u82e9u800 released december 14u800 2008. perl 5u800u82e8u800 improved unicode support added au800 newu800 iou800 implementation added au800 newu800 thread implementation improved numeric accuracy andu800 added several newu800 modules. cite webu800 urlu800 title perl58delta - what isu800 newu800 foru800 perl v5u800u82e8u800u82e0u800 accessdate 2011-01u800-21u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 asu800 ofu800 2013 this version isu800 still remains theu800 most popular version ofu800 perl andu800 isu800 used byu800 redu800 hatu800 5u800 suse 10u800 solaris 10u800 hpu800-uxu800 11u800u82e33u800 andu800 aixu800 5u800. inu800 2004 work began onu800 theu800 synopses u8e28093 originally documents that summarized theu800 apocalypses butu800 which became theu800 specification foru800 theu800 perl 6u800 language. inu800 february 2005 audrey tang began work onu800 pugs au800 perl 6u800 interpreter written inu800 haskell programming language haskell . cite webu800 urlu800 title au800 plan foru800 pugs date 2005-03u800-03u800 publisher ou800'reilly media accessdate 2011-01u800-27u800 this wasu800 theu800 first concerted effort towards making perl 6u800 au800 reality. this effort stalled inu800 2006. cite webu800 urlu800 title reu800 howu800 tou800 implement perl 6u800 inu800 tenu800 years accessdate 2011-01u800-03u800 last tang first audrey date 2010-04u800-21u800 publisher perlmonks onu800 december 18u800 2007 theu800 20th anniversary ofu800 perl 1u800u82e0u800 perl 5u800u82e10u800u82e0u800 wasu800 released. perl 5u800u82e10u800u82e0u800 included notable newu800 features which brought itu800 closer tou800 perl 6u800 . these included au800 switch statement called given when regular expressions updates andu800 theu800 smart match operator . cite webu800 urlu800 title perl5100delta - what isu800 newu800 foru800 perl 5u800u82e10u800u82e0u800 accessdate 2011-01u800-08u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 cite webu800 urlu800 title perlsyn - perl syntax accessdate 2011-01u800-21u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 around this same time development began inu800 earnest onu800 another implementation ofu800 perl 6u800 known asu800 rakudo perl developed inu800 tandem with theu800 parrot virtual machine . asu800 ofu800 november 2009 rakudo perl hasu800 hadu800 regular monthly releases andu800 nowu800 isu800 theu800 most complete implementation ofu800 perl 6u800 . au800 major change inu800 theu800 development process ofu800 perl 5u800 occurred with perl 5u800u82e11u800; theu800 development community hasu800 switched tou800 au800 monthly release cycle ofu800 development releases with au800 yearly schedule ofu800 stable releases. byu800 that plan bugfix point releases will follow theu800 stable releases every three months. onu800 april 12u800 2010 perl 5u800u82e12u800u82e0u800 wasu800 released. notable core enhancements include newu800 package name version syntax theu800 yada yada operator intended tou800 mark placeholder code that isu800 notu800 yetu800 implemented implicit strictures -- strictures isu800 notu800 au800 typo -- full y2038 compliance regex conversion overloading dtrace support andu800 unicode 5u800u82e2u800. cite webu800 urlu800 title perl5120delta - what isu800 newu800 foru800 perl v5u800u82e12u800u82e0u800 accessdate 2011-01u800-08u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 onu800 january 21u800 2011 perl 5u800u82e12u800u82e3u800 wasu800 released; itu800 contains updated modules andu800 some documentation changes. cite webu800 urlu800 title perldelta - what isu800 newu800 foru800 perl v5u800u82e12u800u82e3u800 accessdate 2011-01u800-08u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 version 5u800u82e12u800u82e4u800 wasu800 released onu800 june 20u800 2011. theu800 latest version ofu800 that branch 5u800u82e12u800u82e5u800 wasu800 released onu800 november 10u800 2012. onu800 mayu800 14u800 2011 perl 5u800u82e14u800 wasu800 released. theu800 latest version ofu800 that branch 5u800u82e14u800u82e4u800 wasu800 released onu800 march 10u800 2013. onu800 mayu800 20u800 2012 perl 5u800u82e16u800 wasu800 released. notable newu800 features include theu800 ability tou800 specify au800 given version ofu800 perl that oneu800 wishes tou800 emulate allowing users tou800 upgrade their version ofu800 perl butu800 still runu800 oldu800 scripts that would normally beu800 incompatible. cite webu800 urlu800 title perldelta - what isu800 newu800 foru800 perl v5u800u82e16u800u82e0u800 accessdate 2012-05u800-21u800 work perl 5u800 version 16u800u82e0u800 documentation publisher metacpanu82eorgu800 perl 5u800u82e16u800 also updates theu800 core tou800 support unicode 6u800u82e1u800. some observers credit theu800 release ofu800 perl 5u800u82e10u800 with theu800 start ofu800 theu800 modern perl movement. milestones inu800 theu800 perl renaissance - modern perl programming . modernperlbooksu82ecomu800. retrieved onu800 2013-07u800-17u800. inu800 particular this phrase describes au800 style ofu800 development which embraces theu800 useu800 ofu800 theu800 cpan takes advantage ofu800 recent developments inu800 theu800 language andu800 isu800 rigorous about creating high quality code. preface modern perl 2011-2012 . modernperlbooksu82ecomu800. retrieved onu800 2013-07u800-17u800. while theu800 book modern perl modern perl 2011-2012 edition byu800 chromatic onyx neon press . onyxneonu82ecomu800. retrieved onu800 2013-07u800-17u800. mayu800 beu800 theu800 most visible standard-bearer ofu800 this idea other groups such asu800 theu800 enlightened perl organization have taken upu800 theu800 cause. inu800 late 2012 andu800 2013 several projects foru800 alternative implementations foru800 perl 5u800 started perl5 inu800 perl6 byu800 theu800 rakudo perl team  moeu800  byu800 stevan little andu800 friends  p2u800  byu800 theu800 perl11 team under reini urban andu800  gperl  byu800 goccy. name name name perl wasu800 originally named pearl . wall wanted tou800 give theu800 language au800 short name with positive connotations; heu800 claims that heu800 considered andu800 rejected every three- andu800 four-letter word inu800 theu800 dictionary. heu800 also considered naming itu800 after hisu800 wife gloria. wall discovered theu800 existing pearl programming language pearl programming language before perl perl'su800 official release andu800 changed theu800 spelling ofu800 theu800 name. cite journal urlu800 title larry wall theu800 guru ofu800 perl accessdate 2011-01u800-03u800 last richardson first marjorie date 1999-05u800-01u800 work linux journal when referring tou800 theu800 language theu800 name isu800 normally capitalized  perl  asu800 au800 proper noun. when referring tou800 theu800 interpreter program itself theu800 name isu800 often uncapitalized  perl  because most unix-like file systems areu800 case-sensitive. before theu800 release ofu800 theu800 first edition ofu800  programming perl  itu800 wasu800 common tou800 refer tou800 theu800 language asu800  perl ; randal lu800. schwartz however capitalized theu800 language language'su800 name inu800 theu800 book tou800 make itu800 stand outu800 better when typeset. this case distinction wasu800 subsequently documented asu800 canonical. cite webu800 urlu800 'su800-theu800-difference-between- 22perl 22u800-andu800- 22perl 22u800 3fu800 title perlfaq1 what what'su800 theu800 difference between perl andu800 perl work perldocu82eperlu82eorgu800 - perl 5u800 version 12u800u82e2u800 documentation there isu800 some contention about theu800 allu800-caps spelling perl which theu800 documentation declares incorrect andu800 which some core community members consider au800 shibboleth sign ofu800 outsiders . cite webu800 last schwartz first randal authorlink randal lu800. schwartz title perl asu800 shibboleth andu800 theu800 perl community urlu800 publisher perlmonks accessdate 2007-06u800-01u800 theu800 name isu800 occasionally expanded asu800  practical extraction andu800 report language  butu800 this isu800 au800 backronym . cite book last1 schwartz first1 randal authorlink1 randal schwartz last2 foyu800 first2 brian authorlink2 brian du800 foyu800 last3 phoenix first3 tomu800 title learning perl publisher ou800'reilly media incu800. date 16u800 junu800 2011 year 2011 page 4u800 accessdate 2013-04u800-19u800 isbn 978u800-1449313142 quote perl isu800 sometimes called theu800 practical extraction andu800 report language although itu800 hasu800 also been called au800 pathologically eclectic rubbish lister among other expansions. itu800 itu800'su800 actually au800 backronym notu800 anu800 acronym since larry wall perlu8e28099s creator came upu800 with theu800 name first andu800 theu800 expansion later. thatu8e28099s whyu800 perl isnu8e28099t inu800 allu800 caps. there there'su800 nou800 point inu800 arguing which expansion isu800 correct larry endorses both. other expansions have been suggested asu800 equally canonical including wall wall'su800 ownu800 humorous  pathologically eclectic rubbish lister . cite webu800 last wall first larry authorlink larry wall title perl - theu800 perl language interpreter work perl 5u800 version 12u800u82e2u800 documentation urlu800 accessdate 2011-01u800-26u800 indeed wall claims that theu800 name wasu800 intended tou800 inspire many different expansions. cite webu800 last wall first larry authorlink larry wall title reu800 7u800 perl asu800 shibboleth andu800 theu800 perl community urlu800 publisher perlmonks accessdate 2011-01u800-02u800 camel symbol camel symbol camel symbol file perl-camel-smallu82epngu800 thumb theu800 camel symbol used byu800 ou800'reilly media  programming perl  published byu800 ou800'reilly media features au800 picture ofu800 au800 camel dromedary camel onu800 theu800 cover andu800 isu800 commonly called theu800 camel book . cite book last1 schwartz first1 randal lu800 authorlink1 randal lu800. schwartz last2 phoenix first2 tomu800 last3 foyu800 first3 brian authorlink3 brian du800 foyu800 title learning perl third edition accessdate 2011-01u800-08u800 isbn 978u800-0u800-596u800-00132-2u800 this image ofu800 au800 camel hasu800 become anu800 unofficial symbol ofu800 perl asu800 well asu800 au800 general hacker programmer subculture hacker emblem appearing onu800 tu800-shirts andu800 other clothing items. ou800'reilly owns theu800 image asu800 au800 trademark butu800 licenses itu800 foru800 nonu800-commercial useu800 requiring only anu800 acknowledgement andu800 au800 link tou800 wwwu800u82eperlu82ecomu800. licensing foru800 commercial useu800 isu800 decided onu800 au800 case byu800 case basis. cite webu800 urlu800 title theu800 perl camel usage andu800 trademark information accessdate 2011-01u800-09u800 publisher ou800'reilly media ou800'reilly also provides programming republic ofu800 perl logos foru800 nonu800-commercial sites andu800 powered byu800 perl buttons foru800 anyu800 site that uses perl. onion symbol onion symbol onion symbol file onion 64x64u82epngu800 thumb theu800 onion logo used byu800 theu800 perl foundation theu800 perl foundation owns anu800 alternative symbol anu800 onion which itu800 licenses tou800 itsu800 subsidiaries perl mongers perlmonks perlu82eorgu800 andu800 others. cite webu800 urlu800 title perl trademark accessdate 2011-01u800-09u800 publisher theu800 perl foundation theu800 symbol isu800 au800 visual punu800 onu800 pearl onion . cite news first danu800 last gillmore title republic ofu800 perl date 1998-10u800-25u800 urlu800 work chicago tribune accessdate 2011-01u800-10u800 overview overview overview main perl language structure according tou800 wall perl hasu800 twou800 slogans. theu800 first isu800 there there'su800 more than oneu800 wayu800 tou800 dou800 itu800 commonly known asu800 tmtowtdi. theu800 second slogan isu800 easy things should beu800 easy andu800 hard things should beu800 possible . features features features theu800 overall structure ofu800 perl derives broadly from cu800. perl isu800 procedural programming procedural inu800 nature with variable programming variable variables expression programming expressions assignment statement statements bracket brace -delimited block programming block blocks control structure structures andu800 subroutine subroutines. perl also takes features from shell programming. allu800 variables areu800 marked with leading sigil computer programming sigils which unambiguously identify theu800 data type foru800 example scalar computing scalar array data type array associative array hash ofu800 theu800 variable inu800 context. importantly sigils allow variables tou800 beu800 variable interpolation interpolated directly into string computer science strings . perl hasu800 many built-inu800 functions that provide tools often used inu800 shell programming although many ofu800 these tools areu800 implemented byu800 programs external tou800 theu800 shell such asu800 ascending order sorting andu800 calling onu800 operating system facilities. perl takes list computing lists from lisp programming language lisp associative array hashes associative arrays from awku800 andu800 regular expression expressions from sedu800 . these simplify andu800 facilitate many parsing text-handling andu800 data-management tasks. also shared with lisp areu800 theu800 implicit return statement return ofu800 theu800 last value inu800 au800 block andu800 theu800 fact that allu800 statements have au800 value andu800 thus areu800 also expressions andu800 canu800 beu800 used inu800 larger expressions themselves. perl 5u800 added features that support complex data structure structures first-class function functions that isu800 closure computer science closures asu800 values andu800 anu800 object-oriented programming model. these include reference computer science references packages class-based dynamic dispatch method dispatch andu800 scope programming lexically scoped variables along with compiler directive directives foru800 example theu800 strict pragma . au800 major additional feature introduced with perl 5u800 wasu800 theu800 ability tou800 package code asu800 reusable modules. wall later stated that theu800 whole intent ofu800 perl 5u800 5u800'su800 module system wasu800 tou800 encourage theu800 growth ofu800 perl culture rather than theu800 perl core. cite newsgroup title author date mayu800 10u800 1997 newsgroup idu800 199705101952u82emaa00756 wallu82eorgu800 urlu800 accessdate allu800 versions ofu800 perl dou800 automatic type system data-typing andu800 automatic memory management . theu800 interpreter knows theu800 type andu800 computer data storage storage requirements ofu800 every data object inu800 theu800 program; itu800 allocates andu800 frees storage foru800 them asu800 necessary using reference counting sou800 itu800 cannot deallocate circular buffer circular data structures without manual intervention . legal type conversion conversions u8e28094 foru800 example conversions from number tou800 string u8e28094 areu800 done automatically atu800 runu800 time program lifecycle phase runu800 time ; illegal type conversions areu800 fatal errors. design design design theu800 design ofu800 perl canu800 beu800 understood asu800 au800 response tou800 three broad trends inu800 theu800 computer industry falling hardware costs rising labor costs andu800 improvements inu800 compiler technology. many earlier computer languages such asu800 fortran andu800 cu800 aimed tou800 make efficient useu800 ofu800 expensive computer hardware. inu800 contrast perl isu800 designed tou800 make efficient useu800 ofu800 expensive computer-programmers. perl hasu800 many features that ease theu800 task ofu800 theu800 programmer atu800 theu800 expense ofu800 greater cpuu800 andu800 memory requirements. these include automatic memory management; dynamic typing ; strings lists andu800 hashes; regular expressions; introspection; andu800 anu800 eval function. perl follows theu800 theory ofu800 nou800 built-inu800 limits anu800 idea similar tou800 theu800 zero oneu800 infinity rule. wall wasu800 trained asu800 au800 linguist andu800 theu800 design ofu800 perl isu800 very much informed byu800 linguistic principles. examples include huffman coding common constructions should beu800 short good endu800-weighting theu800 important information should come first andu800 au800 large collection ofu800 language primitive primitives. perl favors language constructs that areu800 concise andu800 natural foru800 humans tou800 write even where they complicate theu800 perl interpreter. perl perl'su800 syntax programming languages syntax reflects theu800 idea that things that areu800 different should look different. cite journal urlu800 title wherefore artu800 thou accessdate 2011-03u800-13u800 last wall first larry date 1997-03u800-01u800 work linux journal foru800 example scalars arrays andu800 hashes have different leading sigils. array indices andu800 hash keys useu800 different kinds ofu800 braces. strings andu800 regular expressions have different standard delimiters. this approach canu800 beu800 contrasted with languages such asu800 lisp programming language lisp where theu800 same su800-expression construct andu800 basic syntax areu800 used foru800 many different purposes. perl does notu800 enforce anyu800 particular programming paradigm procedural programming procedural object-oriented programming object-oriented functional programming functional oru800 others oru800 even require theu800 programmer tou800 choose among them. there isu800 au800 broad practical bent tou800 both theu800 perl language andu800 theu800 community andu800 culture that surround itu800. theu800 preface tou800  programming perl  begins perl isu800 au800 language foru800 getting your jobu800 done. oneu800 consequence ofu800 this isu800 that perl isu800 notu800 au800 tidy language. itu800 includes many features tolerates exceptions tou800 itsu800 rules andu800 employs heuristics tou800 resolve syntactical ambiguities. because ofu800 theu800 forgiving nature ofu800 theu800 compiler bugs canu800 sometimes beu800 hard tou800 find. perl perl'su800 function documentation remarks onu800 theu800 variant behavior ofu800 built-inu800 functions inu800 list andu800 scalar contexts that inu800 general they dou800 what youu800 want unless youu800 want consistency. cite webu800 urlu800 title perlfunc - perl builtin functions accessdate 2011-01u800-10u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 nou800 written formal specification specification oru800 standard foru800 theu800 perl language exists foru800 perl versions through perl 5u800 andu800 there areu800 nou800 plans tou800 create oneu800 foru800 theu800 current version ofu800 perl. there hasu800 been only oneu800 implementation ofu800 theu800 interpreter andu800 theu800 language hasu800 evolved along with itu800. that interpreter together with itsu800 functional tests stands asu800 au800  deu800 facto  specification ofu800 theu800 language. perl 6u800 however started with au800 specification cite webu800 urlu800 title perl 6u800 specification accessdate 2011-01u800-27u800 publisher theu800 perl 6u800 project andu800 several projects cite webu800 urlu800 title perl 6u800 compilers accessdate 2011-01u800-27u800 publisher theu800 perl 6u800 project aimu800 tou800 implement some oru800 allu800 ofu800 theu800 specification. applications applications applications perl hasu800 many andu800 varied applications compounded byu800 theu800 availability ofu800 many standard andu800 third-party modules. perl hasu800 chiefly been used tou800 write common gateway interface cgiu800 scripts large projects written inu800 perl include cpanel slash weblog system slash bugzilla request tracker rtu800 twiki andu800 movable type ; high-traffic websites that useu800 perl extensively include amazonu82ecomu800 bbcu800u82ecou800u82euku800 pricelineu82ecomu800 craigslist cite book last1 gilmore first1 wu800. ju800. title beginning phpu800 andu800 mysql from novice tou800 professional fourth edition publisher apress page 484u800 accessdate 2011-02u800-13u800 isbn 978u800-1u800-4302-3114-1u800 internet movie database imdb cite webu800 title imdb helpdesk what software hardware areu800 youu800 using tou800 runu800 theu800 site publisher internet movie database urlu800 accessdate 2011-02u800-12u800 livejournal slashdot andu800 ticketmaster . -- this isu800  notu800  au800 list ofu800 every website using perl. itu800 itu800'su800 au800 listing ofu800 'high traffic websites'. please consider traffic volume before adding your ownu800 webu800 site tou800 itu800. refs foru800 lesser known websites certainly needed. -- itu800 isu800 also anu800 optional component ofu800 theu800 popular lamp software bundle lamp technology stack foru800 webu800 development inu800 lieu ofu800 phpu800 oru800 python programming language python . perl isu800 often used asu800 au800 glue language tying together systems andu800 interfaces that were notu800 specifically designed tou800 interoperate andu800 foru800 data munging cite webu800 urlu800 title perl books - book data munging with perl work perlu82eorgu800 accessdate december 30u800 2010 that isu800 converting oru800 processing large amounts ofu800 data foru800 tasks such asu800 creating reports. inu800 fact these strengths areu800 intimately linked. theu800 combination makes perl au800 popular allu800-purpose language foru800 system administrator administrators particularly because short programs often called oneu800-liner program programs canu800 beu800 entered andu800 runu800 onu800 au800 single command-line interface command line . perl code canu800 beu800 made portable across microsoft windows windows andu800 unix; such code isu800 often used byu800 suppliers ofu800 software both commercial offu800-theu800-shelf cots andu800 bespoke tou800 simplify packaging andu800 maintenance ofu800 software build- andu800 deployment-scripts. graphical user interface interfaces guis mayu800 beu800 developed using perl. foru800 example tku800 framework perl tku800 andu800 wxperl areu800 commonly used tou800 enable user interaction with perl scripts. such interaction mayu800 beu800 synchronous oru800 asynchronous using callback computer programming callbacks tou800 update theu800 guiu800. implementation implementation implementation perl isu800 implemented asu800 au800 core interpreter written inu800 cu800 together with au800 large collection ofu800 modules written inu800 perl andu800 cu800. asu800 ofu800 2010 theu800 stable version 5u800u82e12u800u82e3u800 isu800 14u800u82e2u800&nbsp; megabyte mbu800 when packaged inu800 au800 taru800 file format taru800 file andu800 gzip compressed. cite webu800 urlu800 title perl source code accessdate 2011-01u800-27u800 publisher cpan theu800 interpreter isu800 150u800 000u800 lines ofu800 cu800 code andu800 compiles tou800 au800 1u800&nbsp;mbu800 executable onu800 typical machine architectures. alternatively theu800 interpreter canu800 beu800 compiled tou800 au800 link library andu800 embedded inu800 other programs. there areu800 nearly 500u800 modules inu800 theu800 distribution comprising 200u800 000u800 lines ofu800 perl andu800 anu800 additional 350u800 000u800 lines ofu800 cu800 code. much ofu800 theu800 cu800 code inu800 theu800 modules consists ofu800 character encoding tables. theu800 interpreter hasu800 anu800 object-oriented architecture. allu800 ofu800 theu800 elements ofu800 theu800 perl languageu8e28094scalars arrays hashes coderefs file handle handlesu8e28094are represented inu800 theu800 interpreter byu800 struct cu800 programming language cu800 structs . operations onu800 these structs areu800 defined byu800 au800 large collection ofu800 macro computer science macros typedef typedefs andu800 functions; these constitute theu800 perl cu800 application programming interface apiu800 . theu800 perl apiu800 canu800 beu800 bewildering tou800 theu800 uninitiated butu800 itsu800 entry points follow au800 consistent naming scheme which provides guidance tou800 those whou800 useu800 itu800. theu800 life ofu800 au800 perl interpreter divides broadly into au800 compile phase andu800 au800 runu800 phase. au800 description ofu800 theu800 perl 5u800 interpreter canu800 beu800 found inu800  programming perl  3rdu800 edu800. chapter 18u800. seeu800 particularly page 467u800 which carefully distinguishes runu800 phase andu800 compile phase from runu800 time program lifecycle phase runu800 time andu800 compile time . perl time andu800 phase areu800 often confused. inu800 perl theu800  phases  areu800 theu800 major stages inu800 theu800 interpreter interpreter'su800 life-cycle. each interpreter goes through each phase only once andu800 theu800 phases follow inu800 au800 fixed sequence. most ofu800 what happens inu800 perl perl'su800 compile phase isu800 compilation andu800 most ofu800 what happens inu800 perl perl'su800 runu800 phase isu800 execution butu800 there areu800 significant exceptions. perl makes important useu800 ofu800 itsu800 capability tou800 execute perl code during theu800 compile phase. perl will also delay compilation into theu800 runu800 phase. theu800 terms that indicate theu800 kind ofu800 processing that isu800 actually occurring atu800 anyu800 moment areu800  compile time  andu800  runu800 time . perl isu800 inu800 compile time atu800 most points during theu800 compile phase butu800 compile time mayu800 also beu800 entered during theu800 runu800 phase. theu800 compile time foru800 code inu800 au800 string argument passed tou800 theu800 eval built-inu800 occurs during theu800 runu800 phase. perl isu800 often inu800 runu800 time during theu800 compile phase andu800 spends most ofu800 theu800 runu800 phase inu800 runu800 time. code inu800 begin blocks executes atu800 runu800 time butu800 inu800 theu800 compile phase. -- note tou800 editors there isu800 something missing inu800 theu800 preceding sentence -- foru800 oneu800 thing au800 comma before theu800 conjunction. theu800 sentence might reasonably read 'code inu800 begin blocks executes notu800 atu800 runu800 time butu800 inu800 theu800 compile phase ' butu800 isu800 that what theu800 author intended -- atu800 compile time theu800 interpreter parses perl code into au800 abstract syntax tree syntax tree . atu800 runu800 time itu800 executes theu800 program byu800 tree traversal walking theu800 tree . text isu800 parsed only once andu800 theu800 syntax tree isu800 subject tou800 optimization before itu800 isu800 executed sou800 that execution isu800 relatively efficient. compile-time optimizations onu800 theu800 syntax tree include constant folding andu800 context propagation butu800 peephole optimization isu800 also performed. perl hasu800 au800 turing-complete formal grammar grammar because parsing canu800 beu800 affected byu800 runu800-time code executed during theu800 compile phase. cite webu800 last schwartz first randal authorlink randal lu800. schwartz title onu800 parsing perl urlu800 accessdate 2007-01u800-03u800 therefore perl cannot beu800 parsed byu800 au800 straight lexu800 programming tool lexu800 yacc lexical analysis lexer parser combination. instead theu800 interpreter implements itsu800 ownu800 lexer which coordinates with au800 modified gnuu800 bison parser tou800 resolve ambiguities inu800 theu800 language. itu800 isu800 often said that only perl canu800 parse perl cite webu800 urlu800 title theu800 perl journal #19u800 9u800u82e26u800 accessdate 2011-02u800-04u800 publisher ou800'reilly media meaning that only theu800 perl interpreter   perl   canu800 parse theu800 perl language  perl  butu800 even this isu800 notu800 inu800 general true. because theu800 perl interpreter canu800 simulate au800 turing machine during itsu800 compile phase itu800 would need tou800 decide theu800 halting problem inu800 order tou800 complete parsing inu800 every case. itu800 itu800'su800 au800 long-standing result that theu800 halting problem isu800 undecidable andu800 therefore notu800 even perl canu800 always parse perl. perl makes theu800 unusual choice ofu800 giving theu800 user access tou800 itsu800 full programming power inu800 itsu800 ownu800 compile phase. theu800 cost inu800 terms ofu800 theoretical purity isu800 high butu800 practical inconvenience seems tou800 beu800 rare. other programs that undertake tou800 parse perl such asu800 static program analysis source-code analyzers andu800 indentation auto-indenters have tou800 contend notu800 only with ambiguous language construct syntactic constructs butu800 also with theu800 recursive language undecidability ofu800 perl parsing inu800 theu800 general case. adam kennedy kennedy'su800 ppiu800 project focused onu800 parsing perl code asu800 au800 document retaining itsu800 integrity asu800 au800 document instead ofu800 parsing perl asu800 executable code which notu800 even perl itself canu800 always dou800 . itu800 wasu800 kennedy whou800 first conjectured that parsing perl suffers from theu800 ' halting problem halting problem ' cite webu800 urlu800 title ppiu8e28094parse analyze andu800 manipulate perl without perl author kennedy adam year 2006 publisher cpan which wasu800 later proved. cite journal authorlink jeffrey kegler title rice rice'su800 theorem journal theu800 perl review volume 4u800 issue 3u800 pages 23u8e2809329 date summer 2008 andu800 cite journal authorlink jeffrey kegler title perl isu800 undecidable journal theu800 perl review volume 5u800 issue 0u800 pages 7u8e2809311 date fall 2008 available online atu800 cite webu800 urlu800 title perl andu800 undecidability author kegler jeffrey perl isu800 distributed with some 120u800 000u800 functional testing functional tests . these runu800 asu800 part ofu800 theu800 normal build process andu800 extensively exercise theu800 interpreter andu800 itsu800 core modules. perl developers rely onu800 theu800 functional tests tou800 ensure that changes tou800 theu800 interpreter dou800 notu800 introduce software bugu800 bugs; additionally perl users whou800 seeu800 that theu800 interpreter passes itsu800 functional tests onu800 their system canu800 have au800 high degree ofu800 confidence that itu800 isu800 working properly. maintenance ofu800 theu800 perl interpreter hasu800 become increasingly difficult over theu800 years. theu800 code base hasu800 undergone continuous development since 1994. theu800 code hasu800 been optimized foru800 performance atu800 theu800 expense ofu800 simplicity clarity andu800 strong internal interfaces. newu800 features have been added yetu800 virtually complete backward compatibility with earlier versions isu800 maintained. major releases ofu800 perl were coordinated byu800 perl pumpkings which handled integrating patch submissions andu800 bugu800 fixes butu800 theu800 language hasu800 since changed tou800 au800 rotating monthly release cycle. development discussion takes place viau800 theu800 perl5_porters mailing list. asu800 ofu800 perl 5u800u82e11u800 development efforts have included refactoring certain core modules known asu800 'dual lifed' modules outu800 ofu800 theu800 perl core cite webu800 urlu800 title perl5110delta - what isu800 newu800 foru800 perl v5u800u82e11u800u82e0u800 accessdate 2011-01u800-08u800 work perl 5u800 version 12u800u82e2u800 documentation publisher perldocu82eperlu82eorgu800 tou800 help alleviate some ofu800 these problems. availability availability availability --note tou800 editors perl isu800 available onu800 sou800 many platforms that itu800 doesn'tu800 make sense tou800 keep au800 laundry list inu800 this article. dou800 notu800 list au800 specific platform unless there areu800 notable issues about running perl onu800 itu800. -- perl isu800 dual licensed under both theu800 artistic license andu800 theu800 gnuu800 general public license . distributions areu800 available foru800 most operating system systems. itu800 isu800 particularly prevalent onu800 unix andu800 unix-like systems butu800 itu800 hasu800 been ported tou800 most modern andu800 many obsolete platforms. with only sixu800 reported exceptions perl canu800 beu800 compiled from source code onu800 allu800 posix -compliant oru800 otherwise-unix-compatible platforms. cite webu800 urlu800 title perl ports binary distributions publisher cpanu82eorgu800 author hietaniemi jarkko year 1998 because ofu800 unusual changes required foru800 theu800 macu800 osu800 history macu800 osu800 classic environment au800 special port called macperl wasu800 shipped independently. cite webu800 urlu800 title theu800 macperl pages year 1997 publisher prime time freeware theu800 cpan comprehensive perl archive network carries au800 complete list ofu800 supported platforms with links tou800 theu800 distributions available onu800 each. cite webu800 urlu800 title perl ports binary distributions accessdate 2011-01u800-27u800 publisher cpan cpan isu800 also theu800 source foru800 publicly available perl modules that areu800 notu800 part ofu800 theu800 core perl distribution. windows windows windows users ofu800 microsoft windows typically install oneu800 ofu800 theu800 native binary distributions ofu800 perl foru800 win32 most commonly strawberry perl oru800 activeperl . compiling perl from source code under windows isu800 possible butu800 most installations lack theu800 requisite cu800 compiler andu800 build tools. this also makes itu800 difficult tou800 install modules from theu800 cpan particularly those that areu800 partially written inu800 cu800. activeperl isu800 au800 closed source distribution from activestate that hasu800 regular releases that track theu800 core perl releases. cite webu800 urlu800 title activeperl isu800 perl foru800 windows macu800 linux aixu800 hpu800-uxu800 & solaris accessdate 2011-01u800-09u800 publisher activestate activestate software theu800 distribution also includes theu800 perl package manager ppmu800 cite webu800 urlu800 title using ppmu800 accessdate 2011-01u800-09u800 publisher activestate activestate software au800 popular tool foru800 installing removing upgrading andu800 managing theu800 useu800 ofu800 common perl modules. strawberry perl isu800 anu800 open source distribution foru800 windows. itu800 hasu800 hadu800 regular quarterly releases since january 2008 including newu800 modules asu800 feedback andu800 requests come inu800. strawberry perl aims tou800 beu800 able tou800 install modules like standard perl distributions onu800 other platforms including compiling xsu800 modules. theu800 cygwin emulation layer isu800 another wayu800 ofu800 running perl under windows. cygwin provides au800 unix-like environment onu800 windows andu800 both perl andu800 cpan areu800 available asu800 standard preu800-compiled packages inu800 theu800 cygwin setup program. because cygwin also includes theu800 gnuu800 compiler collection gccu800 compiling perl from source isu800 also possible. database interfaces database interfaces database interfaces file lamp software bundleu82esvgu800 thumb 400px theu800 lamp software bundle here additionally with squid software squid . au800 high performance andu800 high-availability solution foru800 au800 hostile environment perl isu800 widely favored foru800 database applications. itsu800 text-handling facilities areu800 useful foru800 generating sqlu800 queries; arrays hashes andu800 automatic memory management make itu800 easy tou800 collect andu800 process theu800 returned data. foru800 example inu800 timu800 bunce bunce'su800 perl dbiu800 application programming interface apiu800 theu800 arguments tou800 theu800 apiu800 canu800 beu800 theu800 text ofu800 sqlu800 queries; thus itu800 isu800 possible tou800 program inu800 multiple languages atu800 theu800 same time eu800u82egu800. foru800 generating au800 webu800 page using html javascript andu800 sqlu800 inu800 au800 here document . theu800 useu800 ofu800 perl variable interpolation tou800 programmatically customize each ofu800 theu800 sqlu800 queries andu800 theu800 specification ofu800 perl arrays oru800 hashes asu800 theu800 structures tou800 programmatically hold theu800 resulting data setu800 sets from each sqlu800 query allows au800 high-level mechanism foru800 handling large amounts ofu800 data foru800 post-processing byu800 au800 perl subprogram. cite book last descartes first alligator title programming theu800 perl dbiu800 database programming with perl year 2000 publisher ou800'reilly location beijing uu800u82eau800. isbn 1u800-56592-699u800-4u800 edition 1u800 coauthors bunce timu800 inu800 early versions ofu800 perl database interfaces were created byu800 relinking theu800 interpreter with au800 client-side database library. this wasu800 sufficiently difficult that itu800 wasu800 done foru800 only au800 fewu800 ofu800 theu800 most-important andu800 most widely used databases andu800 itu800 restricted theu800 resulting perl executable tou800 using just oneu800 database interface atu800 au800 time. inu800 perl 5u800 database interfaces areu800 implemented byu800 perl dbiu800 modules. theu800 dbiu800 database interface module presents au800 single database-independent interface tou800 perl applications while theu800 dbdu800 database driver modules handle theu800 details ofu800 accessing some 50u800 different databases; there areu800 dbdu800 drivers foru800 most american national standards institute ansi sqlu800 databases. dbiu800 provides caching foru800 database handles andu800 queries which canu800 greatly improve performance inu800 long-lived execution environments such asu800 modu800 perl mod_perl cite webu800 last bekman first stas title efficient work with databases under mod_perl urlu800 accessdate 2007-09u800-01u800 helping high-volume systems avert load spikes asu800 inu800 theu800 slashdot effect . inu800 modern perl applications especially those written using webu800 application framework frameworks such asu800 catalyst software catalyst theu800 dbiu800 module isu800 often used indirectly viau800 object-relational mapper mappers such asu800 dbix class class dbiu800 oru800 rose dbu800 object which generate sqlu800 queries andu800 handle data transparently tou800 theu800 application author. comparative performance comparative performance comparative performance theu800 computer language benchmarks game au800 project hosted byu800 alioth debian alioth compares theu800 performance ofu800 implementations ofu800 typical programming problems inu800 several programming languages. cite webu800 urlu800 title alioth theu800 computer language benchmarks game project info accessdate 2011-01u800-13u800 publisher alioth theu800 submitted perl implementations typically perform toward theu800 high endu800 ofu800 theu800 memory-usage spectrum andu800 give varied speed results. perl perl'su800 performance inu800 theu800 benchmarks game isu800 typical foru800 interpreted languages. cite webu800 urlu800 title which programs areu800 fastest accessdate 2011-01u800-13u800 work computer language benchmarks game publisher alioth large perl programs start more slowly than similar programs inu800 compiled languages because perl hasu800 tou800 compile theu800 source every time itu800 runs. inu800 au800 talk atu800 theu800 yetu800 another perl conference yapc europe 2005 conference andu800 subsequent article au800 timely start jean-louis leroy found that hisu800 perl programs took much longer tou800 runu800 than heu800 expected because theu800 perl interpreter spent much ofu800 theu800 time finding modules because ofu800 hisu800 over-large include path. cite webu800 urlu800 title au800 timely start author leroy jean-louis date 2005-12u800-01u800 publisher ou800'reilly unlike java python andu800 ruby perl hasu800 only experimental support foru800 preu800-compiling. cite webu800 urlu800 title bu800 bytecode perl compiler compiler'su800 bytecode backend author beattie malcolm andu800 enache adrian year 2003 publisher cpan therefore perl programs payu800 this overhead penalty onu800 every execution. theu800 runu800 phase ofu800 typical programs isu800 long enough that amortized startup time isu800 notu800 substantial butu800 benchmarks that measure very short execution times areu800 likely tou800 beu800 skewed dueu800 tou800 this overhead. au800 number ofu800 tools have been introduced tou800 improve this situation. theu800 first such tool wasu800 apache apache'su800 modu800 perl mod_perl which sought tou800 address oneu800 ofu800 theu800 most-common reasons that small perl programs were invoked rapidly common gateway interface cgiu800 world wide webu800 webu800 development. activestate activeperl viau800 microsoft isapi provides similar performance improvements. once perl code isu800 compiled there isu800 additional overhead during theu800 execution phase that typically isnu800'tu800 present foru800 programs written inu800 compiled languages such asu800 cu800 oru800 cu800 . examples ofu800 such overhead include bytecode interpretation reference-counting memory management andu800 dynamic type-checking. optimizing optimizing optimizing like anyu800 code perl programs canu800 beu800 optimization computer science tuned foru800 performance using benchmark computing benchmarks andu800 performance analysis profiles after au800 readable andu800 correct implementation isu800 finished. inu800 part because ofu800 perl perl'su800 interpreted nature writing more-efficient perl will notu800 always beu800 enough tou800 meet oneu800 oneu800'su800 performance goals foru800 au800 program. inu800 such situations theu800 most-critical routines ofu800 au800 perl program canu800 beu800 written inu800 other languages such asu800 cu800 programming language cu800 oru800 assembly language assembly which canu800 beu800 connected tou800 perl viau800 simple inline modules oru800 theu800 more-complex-butu800-flexible xsu800 perl xsu800 mechanism. cite webu800 urlu800 title inline - metacpanu82eorgu800 accessdate 2011-01u800-26u800 last ingerson first brian publisher cpan dead link date april 2012 botu800 h3llbot nicholas clark au800 perl core developer discusses some perl design trade-offs andu800 solutions inu800 au800 2002 document called when perl isu800 notu800 quite fast enough . cite webu800 urlu800 title when perl isu800 notu800 quite fast enough accessdate 2011-01u800-02u800 last clark first nicholas perl 6u800 perl 6u800 perl 6u800 main perl 6u800 image cameliau82esvgu800 thumb right 200px  camelia  theu800 logo foru800 theu800 perl 6u800 project. cite webu800 urlu800 title perl 6u800 accessdate 2011-02u800-27u800 publisher theu800 perl 6u800 project atu800 theu800 2000 ou800'reilly open source convention perl conference jonu800 orwant made au800 case foru800 au800 major newu800 language-initiative. cite webu800 urlu800 title transcription ofu800 larry larry'su800 talk accessdate 2011-01u800-25u800 last torkington first nathan publisher nntpu82eperlu82eorgu800 this ledu800 tou800 au800 decision tou800 begin work onu800 au800 redesign ofu800 theu800 language tou800 beu800 called perl 6u800. proposals foru800 newu800 language features were solicited from theu800 perl community atu800 large which submitted more than 300u800 request foru800 comments rfcs . wall spent theu800 next fewu800 years digesting theu800 rfcs andu800 synthesizing them into au800 coherent framework foru800 perl 6u800. heu800 hasu800 presented hisu800 design foru800 perl 6u800 inu800 au800 series ofu800 documents called apocalypses - numbered tou800 correspond tou800 chapters inu800  programming perl . asu800 ofu800 2011 january theu800 developing specification ofu800 perl 6u800 isu800 encapsulated inu800 design documents called synopses - numbered tou800 correspond tou800 apocalypses. cite webu800 urlu800 title official perl 6u800 documentation accessdate 2011-01u800-25u800 publisher theu800 perl 6u800 project perl 6u800 isu800 notu800 intended tou800 beu800 backward compatible although there will beu800 au800 compatibility mode. perl 6u800 andu800 perl 5u800 areu800 distinct languages with au800 common ancestry. cite webu800 urlu800 title perl 6u800 - devu800u82eperlu82eorgu800 accessdate 2011-01u800-25u800 publisher devu800u82eperlu82eorgu800 thesis work byu800 bradley mu800. kuhn overseen byu800 wall considered theu800 possible useu800 ofu800 theu800 java virtual machine asu800 au800 runtime foru800 perl. cite journal last kuhn first bradley authorlink bradley mu800. kuhn title considerations onu800 porting perl tou800 theu800 java virtual machine publisher university ofu800 cincinnati date january 2001 urlu800 accessdate 2008-06u800-28u800 kuhn kuhn'su800 thesis showed this approach tou800 beu800 problematic. inu800 2001 itu800 wasu800 decided that perl 6u800 would runu800 onu800 au800 cross-language virtual machine called parrot virtual machine parrot . this will mean that other languages targeting theu800 parrot will gain native access tou800 cpan allowing some level ofu800 cross-language development. inu800 2005 audrey tang created theu800 pugs project anu800 implementation ofu800 perl 6u800 inu800 haskell programming language haskell . this acted asu800 andu800 continues tou800 actu800 asu800 au800 test platform foru800 theu800 perl 6u800 language separate from theu800 development ofu800 theu800 actual implementation - allowing theu800 language designers tou800 explore. theu800 pugs project spawned anu800 active perl haskell cross-language community centered around theu800 freenode #perl6 ircu800 channel. asu800 ofu800 2012 au800 number ofu800 features inu800 theu800 perl 6u800 language show similarities tou800 haskell. citation needed date august 2011 asu800 ofu800 2012 perl 6u800 development centers primarily around twou800 compilers cite webu800 urlu800 title feature comparison ofu800 perl 6u800 compilers # rakudo perl 6u800 anu800 implementation running onu800 theu800 parrot virtual machine andu800 theu800 java virtual machine . cite webu800 last worthington first jonathan title rakudo jvmu800 news more tests plus thread andu800 promise prototypes urlu800 work 6guts accessdate 24u800 july 2013 developers areu800 also working onu800 moarvm au800 cu800 language-based virtual machine designed specifically foru800 rakudo. cite webu800 last worthington first jonathan title moarvm au800 virtual machine foru800 nqpu800 andu800 rakudo urlu800 work 6guts accessdate 24u800 july 2013 # niecza which targets theu800 common language runtime . future ofu800 perl 5u800 future ofu800 perl 5u800 future ofu800 perl 5u800 development ofu800 perl 5u800 isu800 also continuing. perl 5u800u82e12u800u82e0u800 wasu800 released inu800 april 2010 with some newu800 features influenced byu800 theu800 design ofu800 perl 6u800. cite webu800 urlu800 title perl 5u800u82e12u800u82e0u800 released - update accessdate 2011-01u800-08u800 date 2010-04u800-13u800 publisher heise media uku800 perl 5u800u82e14u800u82e1u800 wasu800 released onu800 june 17u800 2011 andu800 perl 5u800u82e16u800u82e1u800 wasu800 released onu800 august 9u800 2012. cite webu800 urlu800 accessdate 2012-08u800-26u800 date 2012-08u800-09u800 title perl 5u800u82e16u800u82e1u800 released perl 5u800u82e18u800u82e0u800 wasu800 released onu800 mayu800 18u800 2013. perl 5u800 development versions areu800 released onu800 au800 monthly basis with major releases coming outu800 once peru800 year. cite webu800 urlu800 accessdate 2012-03u800-28u800 date 2012-02u800-29u800 publisher lwnu800u82enetu800 title theu800 unstoppable perl release train future plans foru800 perl 5u800 include making theu800 core language easier tou800 extend from modules andu800 providing au800 small extensible meta-object protocol inu800 core. cite webu800 urlu800 date 2012-03u800-12u800 title perl 5u800u82e16u800 andu800 beyond theu800 relative proportion ofu800 searches foru800 'perl programming' asu800 compared with similar searches foru800 other programming languages steadily declined from 2005 tou800 early 2011 though itu800 hasu800 leveled offu800 since. cite webu800 title tiobe programming community index perl author tiobe software index year 2013 urlu800 accessdate 2013-08u800-23u800 perl community perl community perl community perl perl'su800 culture andu800 community hasu800 developed alongside theu800 language itself. usenet wasu800 theu800 first public venue inu800 which perl wasu800 introduced butu800 over theu800 course ofu800 itsu800 evolution perl perl'su800 community wasu800 shaped byu800 theu800 growth ofu800 broadening internet-based services including theu800 introduction ofu800 theu800 world wide webu800. theu800 community that surrounds perl wasu800 inu800 fact theu800 topic ofu800 wall wall'su800 first state ofu800 theu800 onion talk. cite webu800 urlu800 title perl culture akau800 theu800 first state ofu800 theu800 onion first larry last wall authorlink larry wall date 1997-08u800-20u800 dead link date july 2013 state ofu800 theu800 onion state ofu800 theu800 onion state ofu800 theu800 onion state ofu800 theu800 onion isu800 theu800 name foru800 wallu8e28099s yearly keynote -style summaries onu800 theu800 progress ofu800 perl andu800 itsu800 community. they areu800 characterized byu800 hisu800 hallmark humor employing references tou800 perlu8e28099s culture theu800 wider hacker culture wallu8e28099s linguistic background sometimes hisu800 family life andu800 occasionally even hisu800 christian background. cite webu800 title 2ndu800 state ofu800 theu800 onion author larry wall urlu800 accessdate 2012-10u800-12u800 search foru800 'church' each talk isu800 first given atu800 various perl conferences andu800 isu800 eventually also published online. perl pastimes perl pastimes perl pastimes ; japhs inu800 email usenet andu800 message board postings just another perl hacker japh programs areu800 au800 common trend originated byu800 randal lu800. schwartz oneu800 ofu800 theu800 earliest professional perl trainers. cite newsgroup author randal lu800. schwartz title whou800 isu800 just another perl hacker idu800 ecc405feeefc120c pliu800 1u800 newsgroup compu82elangu82eperlu82emisc date 1999-05u800-02u800 urlu800 accessdate 2007-11u800-12u800 inu800 theu800 parlance ofu800 perl culture perl programmers areu800 known asu800 perl hackers andu800 from this derives theu800 practice ofu800 writing short programs tou800 print outu800 theu800 phrase just another perl hacker just another perl hacker . inu800 theu800 spirit ofu800 theu800 original concept these programs areu800 moderately obfuscated andu800 short enough tou800 fitu800 into theu800 signature ofu800 anu800 email oru800 usenet message. theu800 canonical japh asu800 developed byu800 schwartz includes theu800 comma atu800 theu800 endu800 although this isu800 often omitted. cite webu800 urlu800 title canonical japh accessdate 2011-05u800-16u800 last schwartz first randal authorlink randal lu800. schwartz date 2005-03u800-31u800 publisher perlmonks ; perl golf perl golf isu800 theu800 pastime ofu800 reducing theu800 number ofu800 characters keyu800 strokes used inu800 au800 perl program tou800 theu800 bare minimum much asu800 howu800 golf players seek tou800 take asu800 fewu800 shots asu800 possible inu800 au800 round. theu800 phrase phrase'su800 first useu800 cite newsgroup author greg bacon title reu800 incrementing au800 value inu800 au800 slice idu800 7imnti mjhu800 1u800 info2u82euahu800u82eeduu800 newsgroup compu82elangu82eperlu82emisc date 1999-05u800-28u800 urlu800 accessdate 2011-07u800-12u800 emphasized theu800 difference between pedestrian code meant tou800 teach au800 newcomer andu800 terse hacks likely tou800 amuse experienced perl programmers anu800 example ofu800 theu800 latter being japh japhs that were already used inu800 signatures inu800 usenet postings andu800 elsewhere. similar stunts hadu800 been anu800 unnamed pastime inu800 theu800 language aplu800 programming language aplu800 inu800 previous decades. theu800 useu800 ofu800 perl tou800 write au800 program that performed rsau800 algorithm rsau800 encryption prompted au800 widespread andu800 practical interest inu800 this pastime. cite webu800 urlu800 title rsau800 inu800 5u800 lines ofu800 perl accessdate 2011-01u800-10u800 last back first adam inu800 subsequent years theu800 term code golf hasu800 been applied tou800 theu800 pastime inu800 other languages. cite webu800 urlu800 title code golf what isu800 code golf publisher 29degrees year 2007 au800 perl golf apocalypse wasu800 held atu800 perl conference 4u800u82e0u800 inu800 monterey california inu800 july 2000. ; obfuscation asu800 with cu800 obfuscated code competitions were au800 well known pastime inu800 theu800 late 1990s. theu800 obfuscated perl contest wasu800 au800 competition held byu800 theu800 perl journal from 1996 tou800 2000 that made anu800 arch virtue ofu800 perl perl'su800 syntactic flexibility. awards were given foru800 categories such asu800 most powerful u8e28094programs that made efficient useu800 ofu800 spaceu8e28094and best four-line signature foru800 programs that fitu800 into four lines ofu800 76u800 characters inu800 theu800 style ofu800 au800 usenet signature block . cite book last1 gallo first1 felix title games diversions andu800 perl culture best ofu800 theu800 perl journal chapter theu800 zeroth obfuscated perl contest editors jonu800 orwant publisher ou800'reilly media year 2003 urlu800 accessdate 2011-01u800-12u800 ; poetry perl poetry isu800 theu800 practice ofu800 writing poems that canu800 beu800 compiled asu800 legal perl code foru800 example theu800 piece known asu800 black perl . this hobby isu800 made possible byu800 theu800 large number ofu800 english words that areu800 used inu800 theu800 perl. newu800 poems areu800 regularly submitted tou800 theu800 community atu800 perlmonks . cite webu800 urlu800 title perl poetry accessdate 2011-01u800-27u800 publisher perlmonks perl onu800 ircu800 perl onu800 ircu800 perl onu800 ircu800 there areu800 au800 number ofu800 internet relay chat ircu800 channels that offer support foru800 theu800 language andu800 some modules. class wikitable - ircu800 network channels - ircu800u82efreenodeu82enetu800 #perl #perl6 #cbstream #perlcafe #poeu800 - ircu800u82eperlu82eorgu800 #moose #poeu800 #catalyst #dbix-class #perl-help #distzilla #epou800 #corehackers #sdlu800 #win32 #toolchain #padre - ircu800u82eslashnetu82eorgu800 #perlmonks - ircu800u82eoftcu82enetu800 #perl - ircu800u82eefnetu82enetu800 #perlhelp - ircu800u82erizonu82enetu800 #perl - ircu800u82edebianu82eorgu800 #debian-perl cpan acme cpan acme cpan acme there areu800 also many examples ofu800 code written purely foru800 entertainment onu800 theu800 cpan . lingua romana perligata foru800 example allows writing programs inu800 latin . cite webu800 urlu800 title lingua romana perligata -- perl foru800 theu800 xxiu800-imum century author conway damian upon execution ofu800 such au800 program theu800 module translates itsu800 source code into regular perl andu800 runs itu800. theu800 perl community hasu800 setu800 aside theu800 acme corporation acme namespace foru800 modules that areu800 funu800 inu800 nature butu800 itsu800 scope hasu800 widened tou800 include exploratory oru800 experimental code oru800 anyu800 other module that isu800 notu800 meant tou800 ever beu800 used inu800 production . some ofu800 theu800 acme modules areu800 deliberately implemented inu800 amusing ways. this includes acme bleach oneu800 ofu800 theu800 first modules inu800 theu800 acme namespace cite webu800 urlu800 title useu800 perl; journal ofu800 acme date 2001-05u800-23u800 author brocard leon publisher useu800 perl dead link date july 2013 which allows theu800 program program'su800 source code tou800 beu800 whitened iu800u82eeu800. allu800 characters replaced with whitespace andu800 yetu800 still work. example code example code example code inu800 older versions ofu800 perl oneu800 would write theu800 hello world program asu800 print hello world nu800 ; inu800 later versions which support theu800 sayu800 statement oneu800 canu800 also write itu800 asu800 useu800 5u800u82e010u800; sayu800 hello world ; good perl practices require more complex programs tou800 addu800 theu800 useu800 strict; andu800 useu800 warnings; directive programming pragmas leading into something like useu800 strict; useu800 warnings; print hello world nu800 ; here isu800 au800 more complex perl program that counts down theu800 seconds upu800 tou800 au800 given threshold # usru800 binu800 perl useu800 strict; useu800 warnings; useu800 iou800 handle; myu800 remaining total ; remaining total shift argv ; stdout- autoflush 1u800 ; while remaining printf remaining su800 su800 ru800 remaining-- total ; sleep 1u800; print nu800 ; theu800 perl interpreter canu800 also beu800 used foru800 oneu800-offu800 scripts onu800 theu800 command line. theu800 following example asu800 invoked from anu800 shu800-compatible shell such asu800 bash translates theu800 string bobu800 inu800 allu800 files ending with .txtu800 inu800 theu800 current directory tou800 robert perl -iu800u82ebaku800 -lpu800 -eu800 'su800 bobu800 robert gu800' .txtu800 criticism criticism criticism perl hasu800 been referred tou800 asu800 line noise byu800 some programmers whou800 claim itsu800 syntax makes itu800 au800 write-only language . theu800 earliest such mention wasu800 inu800 theu800 first edition ofu800 theu800 book   learning perl   au800 perl 5u800 tutorial book written byu800 randal lu800. schwartz cite journal title volume 2u800 journal dru800. dobb dobb'su800 developer update publisher miller-freeman year 1995 -- page 15u800 -- inu800 theu800 first chapter ofu800 which heu800 states yesu800 sometimes perl looks like line noise tou800 theu800 uninitiated butu800 tou800 theu800 seasoned perl programmer itu800 looks like checksummed line noise with au800 mission inu800 life. cite book title learning perl last schwartz first randal lu800. authorlink randal lu800. schwartz publisher ou800'reilly & associates year 1993 heu800 also stated that theu800 accusation that perl isu800 au800 write-only language could beu800 avoided byu800 coding with proper care . theu800 perl overview document  perlintro  states that theu800 names ofu800 built-inu800 magic scalar variable computer science variables look like punctuation oru800 line noise . cite webu800 urlu800 title perlintro work perl 5u800 version 18u800u82e0u800 documentation publisher perl 5u800 porters andu800 perldocu82eperlu82eorgu800 accessdate 2013-06u800-30u800 theu800  perlstyle  document states that line noise inu800 regular expressions could beu800 mitigated using theu800 xu800 modifier tou800 addu800 whitespace. cite webu800 urlu800 title perlstyle work perl 5u800 version 18u800u82e0u800 documentation publisher perl 5u800 porters andu800 perldocu82eperlu82eorgu800 accessdate 2013-06u800-30u800 according tou800 theu800  perl 6u800 faqu800  perl 6u800 wasu800 designed tou800 mitigate theu800 usual suspects that elicit theu800 line noise claim from perl 5u800 critics including theu800 removal ofu800 theu800 majority ofu800 theu800 punctuation variables andu800 theu800 sanitization ofu800 theu800 regex syntax. cite webu800 urlu800 title perl 6u800 faqu800 publisher perl 6u800 project accessdate 2013-06u800-30u800 theu800  perl 6u800 faqu800  also states that what isu800 sometimes referred tou800 asu800 perl perl'su800 line noise isu800 theu800 actual syntax ofu800 theu800 language just asu800 gerund gerunds andu800 preposition andu800 postposition prepositions areu800 au800 part ofu800 theu800 english language . inu800 au800 december 2012 blog posting chromatic programmer chromatic stated that theu800 design ofu800 perl 6u800 hasu800 au800 well-defined grammar that mitigates theu800 issue ofu800 line noise viau800 anu800 improved type system au800 unified object system with anu800 intelligent metamodel metaoperators andu800 au800 clearer system ofu800 context which provides foru800 such niceties asu800 pervasive laziness . cite webu800 urlu800 title theu800 implementation ofu800 perl 5u800 versus perl 6u800 author chromatic authorlink chromatic programmer date 2012 december 31u800 accessdate 2013-06u800-30u800 heu800 also stated that perl 6u800 hasu800 au800 coherence andu800 au800 consistency that perl 5u800 lacks. seeu800 also seeu800 also seeu800 also portal free software computer programming outline ofu800 perl perl data language perl object environment plain oldu800 documentation references references references reflist 30em further reading further reading further reading learning perl 6thu800 edition 2011 ou800'reilly. beginner-level introduction tou800 perl. beginning perl 1stu800 edition 2012 wrox. au800 beginner beginner'su800 tutorial foru800 those newu800 tou800 programming oru800 just newu800 tou800 perl. modern perl 2ndu800 edition 2012 onyx neon. describes modern perl programming techniques. programming perl 4thu800 edition 2012 ou800'reilly. theu800 definitive perl reference. effective perl programming 2ndu800 edition 2010 addison-wesley. intermediate- tou800 advanced-level guide tou800 writing idiomatic perl.   perl cookbook   isbn 0u800-596u800-00313-7u800. practical perl programming examples. cite book last dominus first mark jason title higher order perl urlu800 year 2005 publisher morgan kaufmann isbn 1u800-55860-701u800-3u800 functional programming techniques inu800 perl. external links external links external links sister project links commons category perl programming language bu800 perl programming vu800 topic perl nu800 nou800 qu800 perl su800 nou800 bu800 perl programming -- nou800 more links please beu800 cautious inu800 adding more links tou800 this article. wikipedia isu800 notu800 au800 collection ofu800 links noru800 should itu800 beu800 used foru800 advertising. excessive oru800 inappropriate links will beu800 deleted. seeu800 wikipedia external links & wikipedia spam foru800 details. ifu800 there areu800 already plentiful links please propose additions oru800 replacements onu800 this article article'su800 discussion page oru800 submit your link tou800 theu800 relevant category atu800 theu800 open directory project dmozu82eorgu800 andu800 link back tou800 that category using theu800 dmoz template. nou800 more links -- -- before adding anyu800 links make sure youu800 have read theu800 external links style guide then stopped andu800 reread itu800 again. ifu800 youu800 aren'tu800 absolutely sure theu800 link isu800 inu800 compliance asku800 onu800 theu800 talk page first -- official website perlu82eorgu800 comprehensive perl archive network theu800 canonical location foru800 perl code andu800 modules theu800 perl foundation perlmonks au800 community committed tou800 sharing perl knowledge andu800 coding tips -- before adding anyu800 links make sure youu800 have read theu800 external links style guide then stopped andu800 reread itu800 again. ifu800 youu800 aren'tu800 absolutely sure theu800 link isu800 inu800 compliance asku800 onu800 theu800 talk page first seeu800 -- perl foss category perl category american inventions category cross-platform software category dynamic programming languages category dynamically typed programming languages category free compilers andu800 interpreters category free software programmed inu800 cu800 category high-level programming languages category object-oriented programming languages category procedural programming languages category programming languages created inu800 1987 category scripting languages category software using theu800 artistic license category text-oriented programming languages category unix programming tools link gau800 deu800 mlu800 u8e0b4aau8e0b587u8e0b4b3u8e0b58du8e2808d 
 inu800 software engineering theu800 term  data model  isu800 used inu800 twou800 related senses. inu800 theu800 sense covered byu800 this article itu800 isu800 au800 description ofu800 theu800 objects represented byu800 au800 computer system together with their properties andu800 relationships; these areu800 typically real world objects such asu800 products suppliers customers andu800 orders. inu800 theu800 second sense covered byu800 theu800 article database model itu800 means au800 collection ofu800 concepts andu800 rules used inu800 defining data models foru800 example theu800 relational model uses relations andu800 tuples while theu800 network model uses records sets andu800 fields. file data modeling contextu82esvgu800 thumb 360px overview ofu800 data modeling context data model isu800 based onu800 data data relationship data semantic andu800 data constraint. au800 data model provides theu800 details ofu800 information tou800 beu800 stored andu800 isu800 ofu800 primary useu800 when theu800 final product isu800 theu800 generation ofu800 computer software code foru800 anu800 application oru800 theu800 preparation ofu800 au800 functional specification tou800 aidu800 au800 computer software make-oru800-buyu800 decision. theu800 figure isu800 anu800 example ofu800 theu800 interaction between business process modeling process andu800 data models. paul ru800. smith & richard sarfaty 1993 . creating au800 strategic plan foru800 configuration management using computer aided software engineering case tools. paper foru800 1993 national doeu800 contractors andu800 facilities cadu800 caeu800 user user'su800 group. data models areu800 often used asu800 anu800 aidu800 tou800 communication between theu800 business people defining theu800 requirements foru800 au800 computer system andu800 theu800 technical people defining theu800 design inu800 response tou800 those requirements. they areu800 used tou800 show theu800 data needed andu800 created byu800 business processes. according tou800 hoberman 2009 au800 data model isu800 au800 wayfinding tool foru800 both business andu800 itu800 professionals which uses au800 setu800 ofu800 symbols andu800 text tou800 precisely explain au800 subset ofu800 real information tou800 improve communication within theu800 organization andu800 thereby lead tou800 au800 more flexible andu800 stable application environment. data modeling made simple 2ndu800 edition steve hoberman technics publications llcu800 2009 au800 data model explicitly determines theu800 structure ofu800 data. data models areu800 specified inu800 au800 data modeling notation which isu800 often graphical inu800 form. michael ru800. mccaleb 1999 . au800 conceptual data model ofu800 datum systems . national institute ofu800 standards andu800 technology. august 1999. au800 data model canu800 beu800 sometimes referred tou800 asu800 au800 data structure especially inu800 theu800 context ofu800 programming language languages. data models areu800 often complemented byu800 function model models especially inu800 theu800 context ofu800 enterprise model models. overview overview overview managing large quantities ofu800 structured andu800 unstructured data isu800 au800 primary function ofu800 information system systems. data models describe structured data foru800 computer data storage storage inu800 data management systems such asu800 relational databases. they typically dou800 notu800 describe unstructured data such asu800 word processor word processing documents email email messages pictures digital audio andu800 video. theu800 role ofu800 data models theu800 role ofu800 data models theu800 role ofu800 data models file 3u800-4u800 data model rolesu82esvgu800 thumb 320px howu800 data models deliver benefit. matthew west andu800 julian fowler 1999 . developing high quality data models . theu800 european process industries step technical liaison executive epistle . theu800 main aimu800 ofu800 data models isu800 tou800 support theu800 development ofu800 information system systems byu800 providing theu800 definition andu800 format ofu800 data. according tou800 west andu800 fowler 1999 ifu800 this isu800 done consistently across systems then compatibility ofu800 data canu800 beu800 achieved. ifu800 theu800 same data structures areu800 used tou800 store andu800 access data then different applications canu800 share data. theu800 results ofu800 this areu800 indicated above. however systems andu800 interfaces often cost more than they should tou800 build operate andu800 maintain. they mayu800 also constrain theu800 business rather than support itu800. au800 major cause isu800 that theu800 quality ofu800 theu800 data models implemented inu800 systems andu800 interfaces isu800 poor . business rules specific tou800 howu800 things areu800 done inu800 au800 particular place areu800 often fixed inu800 theu800 structure ofu800 au800 data model. this means that small changes inu800 theu800 wayu800 business isu800 conducted lead tou800 large changes inu800 computer systems andu800 interfaces . entity types areu800 often notu800 identified oru800 incorrectly identified. this canu800 lead tou800 replication ofu800 data data structure andu800 functionality together with theu800 attendant costs ofu800 that duplication inu800 development andu800 maintenance . data models foru800 different systems areu800 arbitrarily different. theu800 result ofu800 this isu800 that complex interfaces areu800 required between systems that share data. these interfaces canu800 account foru800 between 25u800-70u800 ofu800 theu800 cost ofu800 current systems . data cannot beu800 shared electronically with customers andu800 suppliers because theu800 structure andu800 meaning ofu800 data hasu800 notu800 been standardised. foru800 example engineering design data andu800 drawings foru800 process plant areu800 still sometimes exchanged onu800 paper . theu800 reason foru800 these problems isu800 au800 lack ofu800 standards that will ensure that data models will both meet business needs andu800 beu800 consistent. according tou800 hoberman 2009 au800 data model isu800 au800 wayfinding tool foru800 both business andu800 itu800 professionals which uses au800 setu800 ofu800 symbols andu800 text tou800 precisely explain au800 subset ofu800 real information tou800 improve communication within theu800 organization andu800 thereby lead tou800 au800 more flexible andu800 stable application environment. 2u800 au800 data model explicitly determines theu800 structure ofu800 data oru800 structured data. typical applications ofu800 data models include database models design ofu800 information systems andu800 enabling exchange ofu800 data. usually data models areu800 specified inu800 au800 data modeling language. 3u800 communication andu800 precision areu800 theu800 twou800 keyu800 benefits that make au800 data model important tou800 applications that useu800 andu800 exchange data. au800 data model isu800 theu800 medium which project team members from different backgrounds andu800 with different levels ofu800 experience canu800 communicate with oneu800 another. precision means that theu800 terms andu800 rules onu800 au800 data model canu800 beu800 interpreted only oneu800 wayu800 andu800 areu800 notu800 ambiguous. 2u800 au800 data model canu800 beu800 sometimes referred tou800 asu800 au800 data structure especially inu800 theu800 context ofu800 programming languages. data models areu800 often complemented byu800 function models especially inu800 theu800 context ofu800 enterprise models. three perspectives three perspectives three perspectives file 4u800-2u800 ansi-sparc three level architectureu82esvgu800 thumb 320px theu800 ansi sparc three schema approach three level architecture . this shows that au800 data model canu800 beu800 anu800 external model oru800 view au800 conceptual model oru800 au800 physical model. this isu800 notu800 theu800 only wayu800 tou800 look atu800 data models butu800 itu800 isu800 au800 useful wayu800 particularly when comparing models. au800 data model  instance  mayu800 beu800 oneu800 ofu800 three kinds according tou800 ansi inu800 1975 american national standards institute. 1975.  ansi x3u800 sparc study group onu800 data base management systems; interim report . fdtu800 bulletin ofu800 acmu800 sigmod 7u800 2u800. conceptual data models describes theu800 semantics ofu800 au800 domain being theu800 scope ofu800 theu800 model. foru800 example itu800 mayu800 beu800 au800 model ofu800 theu800 interest area ofu800 anu800 organization oru800 industry. this consists ofu800 entity classes representing kinds ofu800 things ofu800 significance inu800 theu800 domain andu800 relationships assertions about associations between pairs ofu800 entity classes. au800 conceptual schema specifies theu800 kinds ofu800 facts oru800 propositions that canu800 beu800 expressed using theu800 model. inu800 that sense itu800 defines theu800 allowed expressions inu800 anu800 artificial 'language' with au800 scope that isu800 limited byu800 theu800 scope ofu800 theu800 model. theu800 useu800 ofu800 conceptual schema hasu800 evolved tou800 become au800 powerful communication tool with business users. often called au800 subject area model samu800 oru800 high-level data model hdmu800 this model isu800 used tou800 communicate core data concepts rules andu800 definitions tou800 au800 business user asu800 part ofu800 anu800 overall application development oru800 enterprise initiative. theu800 number ofu800 objects should beu800 very small andu800 focused onu800 keyu800 concepts. tryu800 tou800 limit this model tou800 oneu800 page although foru800 extremely large organizations oru800 complex projects theu800 model might span twou800 oru800 more pages. data modeling foru800 theu800 business steve hoberman donna burbank chris bradley technics publications llcu800 2009 logical data models ldms describes theu800 semantics asu800 represented byu800 au800 particular data manipulation technology. this consists ofu800 descriptions ofu800 tables andu800 columns object oriented classes andu800 xmlu800 tags among other things. physical data models pdms describes theu800 physical means byu800 which data areu800 stored. this isu800 concerned with partitions cpus tablespaces andu800 theu800 like. theu800 significance ofu800 this approach according tou800 ansi isu800 that itu800 allows theu800 three perspectives tou800 beu800 relatively independent ofu800 each other. storage technology canu800 change without affecting either theu800 logical oru800 theu800 conceptual model. theu800 table column structure canu800 change without necessarily affecting theu800 conceptual model. inu800 each case ofu800 course theu800 structures must remain consistent with theu800 other model. theu800 table column structure mayu800 beu800 different from au800 direct translation ofu800 theu800 entity classes andu800 attributes butu800 itu800 must ultimately carry outu800 theu800 objectives ofu800 theu800 conceptual entity class structure. early phases ofu800 many software development projects emphasize theu800 design ofu800 au800 conceptual schema conceptual data model . such au800 design canu800 beu800 detailed into au800 logical data model . inu800 later stages this model mayu800 beu800 translated into physical data model . however itu800 isu800 also possible tou800 implement au800 conceptual model directly. history history history oneu800 ofu800 theu800 earliest pioneering works inu800 modelling information systems wasu800 done byu800 young andu800 kent 1958 young ju800. wu800. andu800 kent hu800. ku800. 1958 . abstract formulation ofu800 data processing problems . inu800  journal ofu800 industrial engineering . novu800-decu800 1958. 9u800 6u800 ppu800. 471u800-479u800 janis au800. bubenko jru800 2007 from information algebra tou800 enterprise modelling andu800 ontologies - au800 historical perspective onu800 modelling foru800 information systems . inu800  conceptual modelling inu800 information systems engineering . wu800 john krogstie john krogstie etu800 alu800. edsu800. ppu800 1u800-18u800 whou800 argued foru800 au800 precise andu800 abstract wayu800 ofu800 specifying theu800 informational andu800 time characteristics ofu800 au800 data processing problem . they wanted tou800 create au800 notation that should enable theu800 systems analyst analyst tou800 organize theu800 problem around anyu800 piece ofu800 computer hardware hardware . their work wasu800 au800 first effort tou800 create anu800 abstract specification andu800 invariant basis foru800 designing different alternative implementations using different hardware components. au800 next step inu800 isu800 modelling wasu800 taken byu800 codasyl anu800 itu800 industry consortium formed inu800 1959 whou800 essentially aimed atu800 theu800 same thing asu800 young andu800 kent theu800 development ofu800 au800 proper structure foru800 machine independent problem definition language atu800 theu800 system level ofu800 data processing . this ledu800 tou800 theu800 development ofu800 au800 specific isu800 information algebra . inu800 theu800 1960s data modeling gained more significance with theu800 initiation ofu800 theu800 management information system misu800 concept. according tou800 leondes 2002 during that time theu800 information system provided theu800 data andu800 information foru800 management purposes. theu800 first generation database system called integrated data store idsu800 wasu800 designed byu800 charles bachman atu800 general electric. twou800 famous database models theu800 network data model andu800 theu800 hierarchical data model were proposed during this period ofu800 time . cornelius tu800. leondes 2002 .  database andu800 data communication network systems techniques andu800 applications . page 7u800 towards theu800 endu800 ofu800 theu800 1960s edgar fu800. codd worked outu800 hisu800 theories ofu800 data arrangement andu800 proposed theu800 relational model foru800 database management based onu800 first-order logic first-order predicate logic .   derivability redundancy andu800 consistency ofu800 relations stored inu800 large data banks   eu800u82efu800. codd ibmu800 research report 1969 inu800 theu800 1970s entity relationship model modeling emerged asu800 au800 newu800 type ofu800 conceptual data modeling originally proposed inu800 1976 byu800 peter chen . entity relationship models were being used inu800 theu800 first stage ofu800 information system design during theu800 requirements analysis tou800 describe information needs oru800 theu800 type ofu800 information that isu800 tou800 beu800 stored inu800 au800 database . this technique canu800 describe anyu800 ontology computer science ontology iu800u82eeu800. anu800 overview andu800 classification ofu800 concepts andu800 their relationships foru800 au800 certain universe ofu800 discourse area ofu800 interest . inu800 theu800 1970s gu800u82emu800. nijssen developed natural language information analysis method niam method andu800 developed this inu800 theu800 1980s inu800 cooperation with terry halpin into object-role modeling ormu800 . bill kent inu800 hisu800 1978 book  data andu800 reality  cite title data andu800 reality urlu800 compared au800 data model tou800 au800 mapu800 ofu800 au800 territory emphasizing that inu800 theu800 real world highways areu800 notu800 painted redu800 rivers donu800'tu800 have county lines running down theu800 middle andu800 youu800 canu800'tu800 seeu800 contour lines onu800 au800 mountain . inu800 contrast tou800 other researchers whou800 tried tou800 create models that were mathematically clean andu800 elegant kent emphasized theu800 essential messiness ofu800 theu800 real world andu800 theu800 task ofu800 theu800 data modeller tou800 create order outu800 ofu800 chaos without excessively distorting theu800 truth. inu800 theu800 1980s according tou800 janu800 lu800. harrington 2000 theu800 development ofu800 theu800 object-oriented paradigm brought about au800 fundamental change inu800 theu800 wayu800 weu800 look atu800 data andu800 theu800 procedures that operate onu800 data. traditionally data andu800 procedures have been stored separately theu800 data andu800 their relationship inu800 au800 database theu800 procedures inu800 anu800 application program. object orientation however combined anu800 entity entity'su800 procedure with itsu800 data. janu800 lu800. harrington 2000 .  object-oriented database design clearly explained . pu800u82e4u800 types ofu800 data models types ofu800 data models types ofu800 data models database model database model database model main database model  au800 database model isu800 au800 specification describing howu800 au800 database isu800 structured andu800 used. several such models have been suggested. common models include   image figfileconvert000au82esvgu800 flat file database flat model image hierarchisches datenbankmodellu82esvgu800 hierarchical model image network dbu800 modelu82esvgu800 network model image relational model conceptsu82epngu800 relational model flat file database flat model this mayu800 notu800 strictly qualify asu800 au800 data model. theu800 flat oru800 table model consists ofu800 au800 single twou800-dimensional array ofu800 data elements where allu800 members ofu800 au800 given column areu800 assumed tou800 beu800 similar values andu800 allu800 members ofu800 au800 rowu800 areu800 assumed tou800 beu800 related tou800 oneu800 another. hierarchical model inu800 this model data isu800 organized into au800 tree-like structure implying au800 single upward link inu800 each record tou800 describe theu800 nesting andu800 au800 sort field tou800 keep theu800 records inu800 au800 particular order inu800 each same-level list. network model this model organizes data using twou800 fundamental constructs called records andu800 sets. records contain fields andu800 sets define oneu800-tou800-many relationships between records oneu800 owner many members. relational model isu800 au800 database model based onu800 first-order predicate logic. itsu800 core idea isu800 tou800 describe au800 database asu800 au800 collection ofu800 predicates over au800 finite setu800 ofu800 predicate variables describing constraints onu800 theu800 possible values andu800 combinations ofu800 values. image company codmu82egifu800 concept-oriented model image star-schemau82epngu800 star schema object-relational model similar tou800 au800 relational database model butu800 objects classes andu800 inheritance areu800 directly supported inu800 database schema schemas andu800 inu800 theu800 query language. star schema isu800 theu800 simplest style ofu800 data warehouse schema. theu800 star schema consists ofu800 au800 fewu800 fact tables possibly only oneu800 justifying theu800 name referencing anyu800 number ofu800 dimension tables . theu800 star schema isu800 considered anu800 important special case ofu800 theu800 snowflake schema. data structure diagram data structure diagram data structure diagram main data structure diagram file aggregate data structure diagramu82ejpgu800 thumb 240px example ofu800 au800 data structure diagram. au800 data structure diagram dsdu800 isu800 au800 diagram andu800 data model used tou800 describe conceptual schema conceptual data models byu800 providing graphical notations which document entity entities andu800 their relational model relationship relationships andu800 theu800 integrity constraints constraint constraints that bind them. theu800 basic graphic elements ofu800 dsds areu800 boxu800 boxes representing entities andu800 arrow arrows representing relationships. data structure diagrams areu800 most useful foru800 documenting complex data entities. data structure diagrams areu800 anu800 extension ofu800 theu800 entity-relationship model eru800 model . inu800 dsds attribute computing attribute attributes areu800 specified inside theu800 entity boxes rather than outside ofu800 them while relationships areu800 drawn asu800 boxes composed ofu800 attributes which specify theu800 constraints that bind entities together. theu800 eu800-ru800 model while robust doesn'tu800 provide au800 wayu800 tou800 specify theu800 constraints between relationships andu800 becomes visually cumbersome when representing entities with several attributes. dsds differ from theu800 eru800 model inu800 that theu800 eru800 model focuses onu800 theu800 relationships between different entities whereas dsds focus onu800 theu800 relationships ofu800 theu800 elements within anu800 entity andu800 enable users tou800 fully seeu800 theu800 links andu800 relationships between each entity. there areu800 several styles foru800 representing data structure diagrams with theu800 notable difference inu800 theu800 manner ofu800 defining cardinality data modeling cardinality . theu800 choices areu800 between arrow heads inverted arrow heads entity-relationship model crow crow'su800 feet oru800 numerical representation ofu800 theu800 cardinality. file bu800 5u800 1u800 idef1x diagramu82ejpgu800 thumb 240px left example ofu800 anu800 idef1x entity relationship diagrams used tou800 model idef1x itself. fips publication 184u800 released ofu800 idef1x byu800 theu800 computer systems laboratory ofu800 theu800 national institute ofu800 standards andu800 technology nist . 21u800 december 1993. entity-relationship model entity-relationship model entity-relationship model main entity-relationship model anu800 entity-relationship model ermu800 isu800 anu800 abstract conceptual schema conceptual data model oru800 semantic data model used inu800 software engineering tou800 represent structured data. there areu800 several notations used foru800 erms. geographic data model geographic data model geographic data model main data model gisu800 au800 data model inu800 geographic information system systems isu800 au800 mathematical construct foru800 representing geographic objects oru800 surfaces asu800 data. foru800 example theu800 vector graphics vector data model represents geography asu800 collections ofu800 points lines andu800 polygons; theu800 raster graphics raster data model represent geography asu800 cell matrixes that store numeric values; andu800 theu800 triangulated irregular network tinu800 data model represents geography asu800 sets ofu800 contiguous nonoverlapping triangles. wade tu800. andu800 sommer su800. edsu800.   au800 tou800 zu800 gisu800   image groups relate tou800 theu800 process ofu800 making au800 mapu800u82ejpgu800 groups relate tou800 process ofu800 making au800 mapu800 david ru800. soller1 andu800 thomas mu800. berg 2003 . theu800 national geologic mapu800 database project overview andu800 progress uu800u82esu800. geological survey open-file report 03u8e28093471. image ngmdb data model applicationu82ejpgu800 ngmdb data model applications image ngmdb databases linked togetheru82ejpgu800 ngmdb databases linked together image representing three-dimensional mapu800 informationu82ejpgu800 representing 3du800 mapu800 information generic data model generic data model generic data model main generic data model generic data models areu800 generalizations ofu800 conventional data models. they define standardised general relation types together with theu800 kinds ofu800 things that mayu800 beu800 related byu800 such au800 relation type. generic data models areu800 developed asu800 anu800 approach tou800 solve some shortcomings ofu800 conventional data models. foru800 example different modelers usually produce different conventional data models ofu800 theu800 same domain. this canu800 lead tou800 difficulty inu800 bringing theu800 models ofu800 different people together andu800 isu800 anu800 obstacle foru800 data exchange andu800 data integration. invariably however this difference isu800 attributable tou800 different levels ofu800 abstraction inu800 theu800 models andu800 differences inu800 theu800 kinds ofu800 facts that canu800 beu800 instantiated theu800 semantic expression capabilities ofu800 theu800 models . theu800 modelers need tou800 communicate andu800 agree onu800 certain elements which areu800 tou800 beu800 rendered more concretely inu800 order tou800 make theu800 differences less significant. semantic data model semantic data model semantic data model main semantic data model file a2u800 4u800 semantic data modelsu82ejpgu800 thumb 320px semantic data models. au800 semantic data model inu800 software engineering isu800 au800 technique tou800 define theu800 meaning ofu800 data within theu800 context ofu800 itsu800 interrelationships with other data. au800 semantic data model isu800 anu800 abstraction which defines howu800 theu800 stored symbols relate tou800 theu800 real world. au800 semantic data model isu800 sometimes called au800 conceptual data model . theu800 logical data structure ofu800 au800 database management system dbms whether hierarchical model hierarchical network model network oru800 relational model relational cannot totally satisfy theu800 requirements analysis requirements foru800 au800 conceptual definition ofu800 data because itu800 isu800 limited inu800 scope andu800 biased toward theu800 implementation strategy employed byu800 theu800 dbms. therefore theu800 need tou800 define data from au800 three schema approach conceptual view hasu800 ledu800 tou800 theu800 development ofu800 semantic data modeling techniques. that isu800 techniques tou800 define theu800 meaning ofu800 data within theu800 context ofu800 itsu800 interrelationships with other data. asu800 illustrated inu800 theu800 figure. theu800 real world inu800 terms ofu800 resources ideas events etcu800. areu800 symbolically defined within physical data stores. au800 semantic data model isu800 anu800 abstraction which defines howu800 theu800 stored symbols relate tou800 theu800 real world. thus theu800 model must beu800 au800 true representation ofu800 theu800 real world. data model topics data model topics data model topics data architecture data architecture data architecture main data architecture data architecture isu800 theu800 design ofu800 data foru800 useu800 inu800 defining theu800 target state andu800 theu800 subsequent planning needed tou800 hitu800 theu800 target state. itu800 isu800 usually oneu800 ofu800 several architecture domain domains that form theu800 pillars ofu800 anu800 enterprise architecture oru800 solution architecture . au800 data architecture describes theu800 data structures used byu800 au800 business andu800 oru800 itsu800 applications. there areu800 descriptions ofu800 data inu800 storage andu800 data inu800 motion; descriptions ofu800 data stores data groups andu800 data items; andu800 mappings ofu800 those data artifacts tou800 data qualities applications locations etcu800. essential tou800 realizing theu800 target state data architecture describes howu800 data isu800 processed stored andu800 utilized inu800 au800 given system. itu800 provides criteria foru800 data processing operations that make itu800 possible tou800 design data flows andu800 also control theu800 flow ofu800 data inu800 theu800 system. data modeling data modeling data modeling main data modeling file 4u800-3u800 data modelling todayu82esvgu800 320px thumb theu800 data modeling process. data modeling inu800 software engineering isu800 theu800 process ofu800 creating au800 data model byu800 applying formal data model descriptions using data modeling techniques. data modeling isu800 au800 technique foru800 defining business requirement requirements foru800 au800 database. itu800 isu800 sometimes called  database modeling  because au800 data model isu800 eventually implemented inu800 au800 database. whitten jeffrey lu800.; lonnie du800. bentley kevin cu800. dittman. 2004 .  systems analysis andu800 design methods . 6thu800 edition. isbn 0u800-256u800-19906-xu800. theu800 figure illustrates theu800 wayu800 data models areu800 developed andu800 used today. au800 conceptual data model isu800 developed based onu800 theu800 data requirements foru800 theu800 application that isu800 being developed perhaps inu800 theu800 context ofu800 anu800 activity diagram activity model . theu800 data model will normally consist ofu800 entity types attributes relationships integrity rules andu800 theu800 definitions ofu800 those objects. this isu800 then used asu800 theu800 start point foru800 interface oru800 database design . data properties data properties data properties some important properties ofu800 data foru800 which requirements need tou800 beu800 metu800 areu800 definition-related properties  relevance  theu800 usefulness ofu800 theu800 data inu800 theu800 context ofu800 your business.  clarity  theu800 availability ofu800 au800 clear andu800 shared definition foru800 theu800 data.  consistency  theu800 compatibility ofu800 theu800 same type ofu800 data from different sources. file 3u800-2u800 properties ofu800 datau82esvgu800 thumb 320px some important properties ofu800 data. content-related properties  timeliness  theu800 availability ofu800 data atu800 theu800 time required andu800 howu800 upu800 tou800 date that data isu800.  accuracy  howu800 close tou800 theu800 truth theu800 data isu800. properties related tou800 both definition andu800 content  completeness  howu800 much ofu800 theu800 required data isu800 available.  accessibility  where howu800 andu800 tou800 whom theu800 data isu800 available oru800 notu800 available eu800u82egu800. security .  cost  theu800 cost incurred inu800 obtaining theu800 data andu800 making itu800 available foru800 useu800. data organization data organization data organization another kind ofu800 data model describes howu800 tou800 organize data using au800 database management system oru800 other data management technology. itu800 describes foru800 example relational tables andu800 columns oru800 object-oriented classes andu800 attributes. such au800 data model isu800 sometimes referred tou800 asu800 theu800   physical data model   butu800 inu800 theu800 original ansi three schema architecture itu800 isu800 called logical . inu800 that architecture theu800 physical model describes theu800 storage media cylinders tracks andu800 tablespaces . ideally this model isu800 derived from theu800 more conceptual data model described above. itu800 mayu800 differ however tou800 account foru800 constraints like processing capacity andu800 usage patterns. while  data analysis  isu800 au800 common term foru800 data modeling theu800 activity actually hasu800 more inu800 common with theu800 ideas andu800 methods ofu800   wiktionary synthesis synthesis   inferring general concepts from particular instances than itu800 does with   wiktionary analysis analysis   identifying component concepts from more general ones .  presumably weu800 call ourselves systems analyst analysts because nou800 oneu800 canu800 sayu800 systems analyst systems synthesist synthesists.  data modeling strives tou800 bring theu800 data structures ofu800 interest together into au800 cohesive inseparable whole byu800 eliminating unnecessary data redundancies andu800 byu800 relating data structures with relational model relationship relationships. au800 different approach isu800 tou800 useu800 adaptive system systems such asu800 artificial neural network networks that canu800 autonomously create implicit models ofu800 data. data structure data structure data structure main data structure file binary treeu82esvgu800 thumb 240px au800 binary tree au800 simple type ofu800 branching linked data structure. au800 data structure isu800 au800 wayu800 ofu800 storing data inu800 au800 computer sou800 that itu800 canu800 beu800 used efficiently. itu800 isu800 anu800 organization ofu800 mathematical andu800 logical concepts ofu800 data. often au800 carefully chosen data structure will allow theu800 most algorithmic efficiency efficient algorithm tou800 beu800 used. theu800 choice ofu800 theu800 data structure often begins from theu800 choice ofu800 anu800 abstract data type . au800 data model describes theu800 structure ofu800 theu800 data within au800 given domain andu800 byu800 implication theu800 underlying structure ofu800 that domain itself. this means that au800 data model inu800 fact specifies au800 dedicated  grammar  foru800 au800 dedicated artificial language foru800 that domain. au800 data model represents classes ofu800 entities kinds ofu800 things about which au800 company wishes tou800 hold information theu800 attributes ofu800 that information andu800 relationships among those entities andu800 often implicit relationships among those attributes. theu800 model describes theu800 organization ofu800 theu800 data tou800 some extent irrespective ofu800 howu800 data might beu800 represented inu800 au800 computer system. theu800 entities represented byu800 au800 data model canu800 beu800 theu800 tangible entities butu800 models that include such concrete entity classes tend tou800 change over time. robust data models often identify abstraction abstractions ofu800 such entities. foru800 example au800 data model might include anu800 entity class called person representing allu800 theu800 people whou800 interact with anu800 organization. such anu800 abstract entity class isu800 typically more appropriate than ones called vendor oru800 employee which identify specific roles played byu800 those people. image array ofu800 array storageu82esvgu800 array image hashtb08 enu800u82esvgu800 hash table image singly linked list insert afteru82epngu800 linked list image data stacku82esvgu800 stack data structure data model theory data model theory data model theory theu800 term data model canu800 have twou800 meanings beynon-davies pu800. 2004 . database systems 3rdu800 edition. palgrave basingstoke uku800. isbn 1u800-4039-1601-2u800 # au800 data model  theory  iu800u82eeu800. au800 formal description ofu800 howu800 data mayu800 beu800 structured andu800 accessed. # au800 data model  instance  iu800u82eeu800. applying au800 data model  theory  tou800 create au800 practical data model  instance  foru800 some particular application. au800 data model theory hasu800 three main components theu800 structural part au800 collection ofu800 data structures which areu800 used tou800 create databases representing theu800 entities oru800 objects modeled byu800 theu800 database. theu800 integrity part au800 collection ofu800 rules governing theu800 constraints placed onu800 these data structures tou800 ensure structural integrity. theu800 manipulation part au800 collection ofu800 operators which canu800 beu800 applied tou800 theu800 data structures tou800 update andu800 query theu800 data contained inu800 theu800 database. foru800 example inu800 theu800 relational model theu800 structural part isu800 based onu800 au800 modified concept ofu800 theu800 relation mathematics mathematical relation ; theu800 integrity part isu800 expressed inu800 first-order logic andu800 theu800 manipulation part isu800 expressed using theu800 relational algebra tuple calculus andu800 domain calculus . au800 data model instance isu800 created byu800 applying au800 data model theory. this isu800 typically done tou800 solve some business enterprise requirement. business requirements areu800 normally captured byu800 au800 semantic logical data model . this isu800 transformed into au800 physical data model instance from which isu800 generated au800 physical database. foru800 example au800 data modeler mayu800 useu800 au800 data modeling tool tou800 create anu800 entity-relationship model ofu800 theu800 corporate data repository ofu800 some business enterprise. this model isu800 transformed into au800 relational model which inu800 turn generates au800 relational database . patterns patterns patterns patterns theu800 data model resource book universal patterns foru800 data modeling lenu800 silverstone & paul agnew 2008 . areu800 common data modeling structures that occur inu800 many data models. related models related models related models data flow diagram data flow diagram data flow diagram main data flow diagram file data flow diagram exampleu82ejpgu800 thumb 240px data flow diagram example. john azzolini 2000 . introduction tou800 systems engineering practices . july 2000. au800 data flow diagram dfdu800 isu800 au800 graphical representation ofu800 theu800 flow ofu800 data through anu800 information system . itu800 differs from theu800 flowchart asu800 itu800 shows theu800  data  flow instead ofu800 theu800  control  flow ofu800 theu800 program. au800 data flow diagram canu800 also beu800 used foru800 theu800 data visualization visualization ofu800 data processing structured design . data flow diagrams were invented byu800 larry constantine theu800 original developer ofu800 structured design wu800. stevens gu800. myers lu800. constantine structured design ibmu800 systems journal 13u800 2u800 115u800-139u800 1974. based onu800 martin andu800 estrin estrin'su800 data flow graph model ofu800 computation. itu800 isu800 common practice tou800 draw au800 system context diagram context-level data flow diagram first which shows theu800 interaction between theu800 system andu800 outside entities. theu800  dfdu800  isu800 designed tou800 show howu800 au800 system isu800 divided into smaller portions andu800 tou800 highlight theu800 flow ofu800 data between those parts. this context-level data flow diagram isu800 then exploded tou800 show more detail ofu800 theu800 system being modeled information model information model information model main information model file au800 01u800 audio compact disc collectionu82ejpgu800 thumb 320px example ofu800 anu800 express data modeling language express gu800 information model . anu800 information model isu800 notu800 au800 type ofu800 data model butu800 more oru800 less anu800 alternative model. within theu800 field ofu800 software engineering both au800 data model andu800 anu800 information model canu800 beu800 abstract formal representations ofu800 entity types that includes their properties relationships andu800 theu800 operations that canu800 beu800 performed onu800 them. theu800 entity types inu800 theu800 model mayu800 beu800 kinds ofu800 real-world objects such asu800 devices inu800 au800 network oru800 they mayu800 themselves beu800 abstract such asu800 foru800 theu800 entities used inu800 au800 billing system. typically they areu800 used tou800 model au800 constrained domain that canu800 beu800 described byu800 au800 closed setu800 ofu800 entity types properties relationships andu800 operations. according tou800 leeu800 1999 anu800 information model isu800 au800 representation ofu800 concepts relationships constraints rules andu800 operation mathematics operations tou800 specify semantic data model data semantics foru800 au800 chosen domain ofu800 discourse. itu800 canu800 provide sharable stable andu800 organized structure ofu800 information requirements foru800 theu800 domain context. yu800. tina leeu800 1999 . information modeling from design tou800 implementation national institute ofu800 standards andu800 technology. more inu800 general theu800 term  information model  isu800 used foru800 models ofu800 individual things such asu800 facilities buildings process plants etcu800. inu800 those cases theu800 concept isu800 specialised tou800 facility information model building information modeling building information model plant information model etcu800. such anu800 information model isu800 anu800 integration ofu800 au800 model ofu800 theu800 facility with theu800 data andu800 documents about theu800 facility. anu800 information model provides formalism tou800 theu800 description ofu800 au800 problem domain without constraining howu800 that description isu800 mapped tou800 anu800 actual implementation inu800 software. there mayu800 beu800 many mappings ofu800 theu800 information model. such mappings areu800 called data models irrespective ofu800 whether they areu800 object model models eu800u82egu800. using unified modeling language umlu800 entity-relationship model entity relationship model models oru800 xmlu800 schema schemas. file jkdomu82esvgu800 thumb 180px left document object model au800 standard object model foru800 representing html oru800 xmlu800 . object model object model object model main object model anu800 object model inu800 computer science isu800 au800 collection ofu800 objects oru800 classes through which au800 program canu800 examine andu800 manipulate some specific parts ofu800 itsu800 world. inu800 other words theu800 object-oriented interface tou800 some service oru800 system. such anu800 interface isu800 said tou800 beu800 theu800  object model ofu800  theu800 represented service oru800 system. foru800 example theu800 document object model document object model domu800 isu800 au800 collection ofu800 objects that represent au800 webu800 page page inu800 au800 webu800 browser used byu800 scripting language script programs tou800 examine andu800 dynamically change theu800 page. there isu800 au800 microsoft excel object model excel object model overview -- botu800 generated title -- foru800 controlling microsoft excel from another program andu800 theu800 ascom standard ascom telescope driver dead link date november 2011 isu800 anu800 object model foru800 controlling anu800 astronomical telescope. inu800 computing theu800 term  object model  hasu800 au800 distinct second meaning ofu800 theu800 general properties ofu800 object computer science objects inu800 au800 specific computer programming language technology notation oru800 methodology that uses them. foru800 example theu800   java programming language java object model  theu800   component object model comu800 object model  oru800  theu800 object model ofu800 object-modeling technique omtu800  . such object models areu800 usually defined using concepts such asu800 class computer science class message computer science message inheritance computer science inheritance polymorphism inu800 object-oriented programming polymorphism andu800 information hiding encapsulation . there isu800 anu800 extensive literature onu800 formalized object models asu800 au800 subset ofu800 theu800 formal semantics ofu800 programming languages . object-role model object-role model object-role model main object-role modeling file schema foru800 geologic surfaceu82egifu800 thumb 320px right example ofu800 theu800 application ofu800 object-role modeling inu800 au800 schema foru800 geologic surface stephen mu800. richard 1999 . stephen mu800. richard 1999 . geologic concept modeling . uu800u82esu800. geological survey open-file report 99u800-386u800. object-role modeling ormu800 isu800 au800 method foru800 conceptual modeling andu800 canu800 beu800 used asu800 au800 tool foru800 information andu800 rules analysis. joachim rossberg andu800 rickard redler 2005 .  prou800 scalable .netu800 2u800u82e0u800 application designs. . page 27u800 object-role modeling isu800 au800 fact-oriented method foru800 performing systems analysis atu800 theu800 conceptual level. theu800 quality ofu800 au800 database application depends critically onu800 itsu800 design. tou800 help ensure correctness clarity adaptability andu800 productivity information systems areu800 best specified first atu800 theu800 conceptual level using concepts andu800 language that people canu800 readily understand. theu800 conceptual design mayu800 include data process andu800 behavioral perspectives andu800 theu800 actual dbms used tou800 implement theu800 design might beu800 based onu800 oneu800 ofu800 many logical data models relational hierarchic network object-oriented etcu800. . object role modeling anu800 overview msdnu82emicrosoftu82ecomu800 . retrieved 19u800 september 2008. unified modeling language models unified modeling language models unified modeling language models main unified modeling language theu800 unified modeling language umlu800 isu800 au800 standardized general-purpose modeling language inu800 theu800 field ofu800 software engineering . itu800 isu800 au800 visual language graphical language foru800 visualizing specifying constructing andu800 documenting theu800 artifact software development artifacts ofu800 au800 software-intensive system. theu800 unified modeling language offers au800 standard wayu800 tou800 write au800 system system'su800 blueprints including grady booch ivar jacobson & jimu800 rumbaugh 2000 omgu800 unified modeling language specification dead link date november 2011 version 1u800u82e3u800 first edition march 2000. retrieved 12u800 august 2008. conceptual things such asu800 business process processes andu800 system functions concrete things such asu800 programming language statements database schemas andu800 reusable component-based software engineering software components . umlu800 offers au800 mixu800 ofu800 functional model models data models andu800 database model models. seeu800 also seeu800 also seeu800 also business process model core architecture data model data dictionary jc3iedm process model data format description language data format description language dfdl toad data modeler - cross-platform database modeling software welcome tou800 theu800 toad data modeler community earthdatamodels - environmental data model library references references references reflist 2u800 further reading further reading further reading david cu800. hayu800 1996 .  data model patterns conventions ofu800 thought . newu800 york dorset house publishers incu800. matthew west andu800 julian fowler 1999 . developing high quality data models . theu800 european process industries step technical liaison executive epistle . lenu800 silverston 2001 .  theu800 data model resource book  volume 1u800 2u800. john wiley & sons. rfcu800 3444 - onu800 theu800 difference between information models andu800 data models lenu800 silverston & paul agnew 2008 .  theu800 data model resource book universal patterns foru800 data modeling  volume 3u800. john wiley & sons. steve hoberman donna burbank & chris bradley 2009 . data modeling foru800 theu800 business . technics publications llcu800 andy graham 2010  theu800 enterprise data model au800 framework foru800 enterprise data architecture  wayne eckerson 2011 creating anu800 enterprise data strategy managing data asu800 au800 corporate asset data model software engineering defaultsort data model category data modeling 
 ppu800-protected expiry 2014-07u800-10t09 07u800 44zu800 small yesu800 ppu800-move-indef small yesu800 refimprove date october 2011 osu800 anu800  operating system   osu800  isu800 au800 collection ofu800 software that manages computer hardware resources andu800 provides common operating system services services foru800 computer program programs. theu800 operating system isu800 anu800 essential component ofu800 theu800 system software inu800 au800 computer system. application programs usually require anu800 operating system tou800 function. time-sharing operating systems schedule tasks foru800 efficient useu800 ofu800 theu800 system andu800 mayu800 also include accounting software foru800 cost allocation ofu800 processor time mass storage printing andu800 other resources. foru800 hardware functions such asu800 input andu800 output andu800 dynamic memory allocation memory allocation theu800 operating system acts asu800 anu800 intermediary between programs andu800 theu800 computer hardware cite book last stallings title operating systems internals andu800 design principles publisher prentice hall year 2005 location pearson page 6u800 cite book last dhotre first iu800u82eau800. title operating systems. publisher technical publications year 2009 page 1u800 although theu800 application code isu800 usually executed directly byu800 theu800 hardware andu800 will frequently make au800 system call tou800 anu800 osu800 function oru800 beu800 interrupted byu800 itu800. operating systems canu800 beu800 found onu800 almost anyu800 device that contains au800 computeru8e28094from cellular phone phones andu800 video game console consoles tou800 supercomputer supercomputers andu800 webu800 server servers. examples ofu800 popular modern operating systems include --ordered alphabetically peru800 discussion consensus; please dou800 notu800 reu800-order without discussing itu800 onu800 theu800 talk page; seeu800 -- android operating system android bsdu800 iosu800 linux osu800 xu800 qnxu800 microsoft windows cite webu800 urlu800 title operating system market share publisher netu800 applications windows phone andu800 ibmu800 zu800 osu800 . allu800 these except windows andu800 zu800 osu800 share roots inu800 unix . types ofu800 operating systems types ofu800 operating systems types ofu800 operating systems unreferenced section date february 2012 real-time real-time real-time au800 real-time operating system isu800 au800 multitasking operating system that aims atu800 executing real-time applications. real-time operating systems often useu800 specialized scheduling algorithms sou800 that they canu800 achieve au800 deterministic nature ofu800 behavior. theu800 main objective ofu800 real-time operating systems isu800 their quick andu800 predictable response tou800 events. they have anu800 event-driven oru800 time-sharing design andu800 often aspects ofu800 both. anu800 event-driven system switches between tasks based onu800 their priorities oru800 external events while time-sharing operating systems switch tasks based onu800 clock interrupts. multi-user multi-user multi-user au800 multi-user operating system allows multiple users tou800 access au800 computer system atu800 theu800 same time. time-sharing systems andu800 internet servers canu800 beu800 classified asu800 multi-user systems asu800 they enable multiple-user access tou800 au800 computer through theu800 sharing ofu800 time. single-user operating systems have only oneu800 user butu800 mayu800 allow multiple programs tou800 runu800 atu800 theu800 same time. multi-tasking vsu800. single-tasking multi-tasking vsu800. single-tasking multi-tasking vsu800. single-tasking au800 multi-tasking operating system allows more than oneu800 program tou800 beu800 running atu800 theu800 same time from theu800 point ofu800 view ofu800 human time scales. au800 single-tasking system hasu800 only oneu800 running program. multi-tasking canu800 beu800 ofu800 twou800 types preu800-emptive andu800 cou800-operative. inu800 preu800-emptive multitasking theu800 operating system slices theu800 cpuu800 time andu800 dedicates oneu800 slot tou800 each ofu800 theu800 programs. unix-like operating systems such asu800 solaris andu800 linux support preu800-emptive multitasking asu800 does amigaos . cooperative multitasking isu800 achieved byu800 relying onu800 each process tou800 give time tou800 theu800 other processes inu800 au800 defined manner. 16u800-bitu800 versions ofu800 microsoft windows used cooperative multi-tasking. 32u800-bitu800 versions ofu800 both windows ntu800 andu800 win9x used preu800-emptive multi-tasking. macu800 osu800 prior tou800 osu800 xu800 used tou800 support cooperative multitasking. distributed distributed distributed further distributed system au800 distributed operating system manages au800 group ofu800 independent computers andu800 makes them appear tou800 beu800 au800 single computer. theu800 development ofu800 networked computers that could beu800 linked andu800 communicate with each other gave rise tou800 distributed computing. distributed computations areu800 carried outu800 onu800 more than oneu800 machine. when computers inu800 au800 group work inu800 cooperation they make au800 distributed system. embedded embedded embedded embedded operating system systems areu800 designed tou800 beu800 used inu800 embedded system embedded computer systems . they areu800 designed tou800 operate onu800 small machines like pdas with less autonomy. they areu800 able tou800 operate with au800 limited number ofu800 resources. they areu800 very compact andu800 extremely efficient byu800 design. windows ceu800 andu800 minix 3u800 areu800 some examples ofu800 embedded operating systems. history history history main history ofu800 operating systems seeu800 also resident monitor early computers were built tou800 perform au800 series ofu800 single tasks like au800 calculator. basic operating system features were developed inu800 theu800 1950s such asu800 resident monitor functions that could automatically runu800 different programs inu800 succession tou800 speed upu800 processing. operating systems didu800 notu800 exist inu800 their modern andu800 more complex forms until theu800 early 1960s. cite book title classic operating systems editor1-first peru800 brinch editor1-last hansen year 2001 publisher springer location isbn 0u800-387u800-95113-xu800 pages 4u8e280937 urlu800 hardware features were added that enabled useu800 ofu800 runtime library runtime libraries programmable interrupt controller interrupts andu800 parallel processing . when personal computer computers became popular inu800 theu800 1980s operating systems were made foru800 them similar inu800 concept tou800 those used onu800 larger computers. inu800 theu800 1940s theu800 earliest electronic digital systems hadu800 nou800 operating systems. electronic systems ofu800 this time were programmed onu800 rows ofu800 mechanical switches oru800 byu800 jumper wires onu800 plug boards. these were special-purpose systems that foru800 example generated ballistics tables foru800 theu800 military oru800 controlled theu800 printing ofu800 payroll checks from data onu800 punched paper cards. after programmable general purpose computers were invented machine languages consisting ofu800 strings ofu800 theu800 binary digits 0u800 andu800 1u800 onu800 punched paper tape were introduced that sped upu800 theu800 programming process stern 1981 . ibm360-65u800-1u800u82ecorestore thumb osu800 360u800 wasu800 used onu800 most ibmu800 mainframe computers beginning inu800 1966 including theu800 computers that helped nasa putu800 au800 manu800 onu800 theu800 moon. inu800 theu800 early 1950s au800 computer could execute only oneu800 program atu800 au800 time. each user hadu800 sole useu800 ofu800 theu800 computer foru800 au800 limited period ofu800 time andu800 would arrive atu800 au800 scheduled time with program andu800 data onu800 punched paper cards andu800 oru800 punched tape. theu800 program would beu800 loaded into theu800 machine andu800 theu800 machine would beu800 setu800 tou800 work until theu800 program completed oru800 crashed. programs could generally beu800 debugged viau800 au800 front panel using toggle switches andu800 panel lights. itu800 isu800 said that alan turing wasu800 au800 master ofu800 this onu800 theu800 early manchester mark 1u800 machine andu800 heu800 wasu800 already deriving theu800 primitive conception ofu800 anu800 operating system from theu800 principles ofu800 theu800 universal turing machine . later machines came with libraries ofu800 computer software programs which would beu800 linked tou800 au800 user user'su800 program tou800 assist inu800 operations such asu800 input andu800 output andu800 generating machine code computer code from human-readable assembly language symbolic code . this wasu800 theu800 genesis ofu800 theu800 modern-dayu800 operating system. however machines still ranu800 au800 single jobu800 atu800 au800 time. atu800 cambridge university inu800 england theu800 jobu800 queue wasu800 atu800 oneu800 time au800 washing line from which tapes were hung with different colored clothes-pegs tou800 indicate jobu800-priority. citation needed date september 2010 mainframes mainframes mainframes main mainframe computer seeu800 also history ofu800 ibmu800 mainframe operating systems through theu800 1950s many major features were pioneered inu800 theu800 field ofu800 operating systems including batch processing input output interrupt data buffer buffer buffering computer multitasking multitasking spooling runtime library runtime libraries linker computing link-loading andu800 programs foru800 sorting algorithm sorting records inu800 files. these features were included oru800 notu800 included inu800 application software atu800 theu800 option ofu800 application programmers rather than inu800 au800 separate operating system used byu800 allu800 applications. inu800 1959 theu800 share operating system wasu800 released asu800 anu800 integrated utility foru800 theu800 ibmu800 704u800 andu800 later inu800 theu800 ibmu800 709u800 709u800 andu800 ibmu800 7090 7090 mainframes although itu800 wasu800 quickly supplanted byu800 ibmu800 7090 94u800 ibsys ibsys ibjob onu800 theu800 709u800 7090 andu800 7094. during theu800 1960s ibmu800 ibmu800'su800 osu800 360u800 introduced theu800 concept ofu800 au800 single osu800 spanning anu800 entire product line which wasu800 crucial foru800 theu800 success ofu800 theu800 system 360u800 machines. ibmu800 'su800 current mainframe operating systems areu800 history ofu800 ibmu800 mainframe operating systems distant descendants ofu800 this original system andu800 applications written foru800 osu800 360u800 canu800 still beu800 runu800 onu800 modern machines. citation needed date june 2010 osu800 360u800 also pioneered theu800 concept that theu800 operating system keeps track ofu800 allu800 ofu800 theu800 system resources that areu800 used including program andu800 data space allocation inu800 main memory andu800 file space inu800 secondary storage andu800 file locking during update. when theu800 process isu800 terminated foru800 anyu800 reason allu800 ofu800 these resources areu800 reu800-claimed byu800 theu800 operating system. theu800 alternative cpu800-67u800 system foru800 theu800 ibmu800 system 360u800 model 67u800 su800 360u800-67u800 started au800 whole line ofu800 ibmu800 operating systems focused onu800 theu800 concept ofu800 virtual machine machines. other operating systems used onu800 ibmu800 su800 360u800 series mainframes included systems developed byu800 ibmu800 cosu800 360u800 compatibility operating system dosu800 360u800 disk operating system tssu800 360u800 time sharing system tosu800 360u800 tape operating system bosu800 360u800 basic operating system andu800 ibmu800 airline control program acpu800 airline control program asu800 well asu800 au800 fewu800 nonu800-ibmu800 systems michigan terminal system mtsu800 michigan terminal system music spu800 music multi-user system foru800 interactive computing andu800 orvyl stanford timesharing system . control data corporation developed theu800 scope software scope operating system inu800 theu800 1960s foru800 batch processing . inu800 cooperation with theu800 university ofu800 minnesota theu800 cdcu800 kronos kronos andu800 later theu800 nosu800 software nosu800 operating systems were developed during theu800 1970s which supported simultaneous batch andu800 timesharing useu800. like many commercial timesharing systems itsu800 interface wasu800 anu800 extension ofu800 theu800 dartmouth basic operating systems oneu800 ofu800 theu800 pioneering efforts inu800 timesharing andu800 programming languages. inu800 theu800 late 1970s control data andu800 theu800 university ofu800 illinois developed theu800 plato computer system plato operating system which used plasma panel displays andu800 long-distance time sharing networks. plato wasu800 remarkably innovative foru800 itsu800 time featuring real-time chat andu800 multi-user graphical games. inu800 1961 burroughs corporation introduced theu800 b5000 with theu800 master control program mcpu800 mcpu800 burroughs large systems master control program operating system. theu800 b5000 wasu800 au800 stack machine designed tou800 exclusively support high-level languages with nou800 machine language oru800 assembler andu800 indeed theu800 master control program mcpu800 wasu800 theu800 first osu800 tou800 beu800 written exclusively inu800 au800 high-level language&nbsp;u8e28093 executive systems problem oriented language espol au800 dialect ofu800 algol . master control program mcpu800 also introduced many other ground-breaking innovations such asu800 being theu800 first commercial implementation ofu800 virtual memory . during development ofu800 theu800 as400 ibmu800 made anu800 approach tou800 burroughs tou800 licence mcpu800 tou800 runu800 onu800 theu800 as400 hardware. this proposal wasu800 declined byu800 burroughs management tou800 protect itsu800 existing hardware production. master control program mcpu800 isu800 still inu800 useu800 today inu800 theu800 unisys clearpath mcpu800 line ofu800 computers. univac theu800 first commercial computer manufacturer produced au800 series ofu800 exec operating systems. like allu800 early main-frame systems this batch-oriented system managed magnetic drums disks card readers andu800 line printers. inu800 theu800 1970s univac produced theu800 real-time basic rtbu800 system tou800 support large-scale time sharing also patterned after theu800 dartmouth bcu800 system. general electric andu800 mitu800 developed general electric comprehensive operating supervisor gecos which introduced theu800 concept ofu800 ringed security privilege levels. after acquisition byu800 honeywell itu800 wasu800 renamed general comprehensive operating system gcos . digital equipment corporation developed many operating systems foru800 itsu800 various computer lines including tops-10u800 andu800 tops-20u800 time sharing systems foru800 theu800 36u800-bitu800 pdpu800-10u800 class systems. prior tou800 theu800 widespread useu800 ofu800 unix tops-10u800 wasu800 au800 particularly popular system inu800 universities andu800 inu800 theu800 early arpanet community. from theu800 late 1960s through theu800 late 1970s several hardware capabilities evolved that allowed similar oru800 ported software tou800 runu800 onu800 more than oneu800 system. early systems hadu800 utilized microprogramming tou800 implement features onu800 their systems inu800 order tou800 permit different underlying computer architecture architectures tou800 appear tou800 beu800 theu800 same asu800 others inu800 au800 series. inu800 fact most 360s after theu800 360u800 40u800 except theu800 360u800 165u800 andu800 360u800 168u800 were microprogrammed implementations. theu800 enormous investment inu800 software foru800 these systems made since theu800 1960s caused most ofu800 theu800 original computer manufacturers tou800 continue tou800 develop compatible operating systems along with theu800 hardware. notable supported mainframe operating systems include mcpu800 burroughs large systems burroughs mcpu800 &nbsp;u8e28093 burroughs large systems b5000 1961 tou800 unisys clearpath mcpu800 present. ibmu800 osu800 360u800 &nbsp;u8e28093 ibmu800 system 360u800 1966 tou800 ibmu800 zu800 osu800 present. ibmu800 cpu800-67u800 &nbsp;u8e28093 ibmu800 system 360u800 1967 tou800 ibmu800 zu800 vmu800 present. univac exec 8u800 &nbsp;u8e28093 univac 1108 1967 tou800 unisys osu800 2200 operating system osu800 2200 unisys clearpath dorado present. microcomputers microcomputers microcomputers image pcu800 dosu800 1u800u82e10u800 screenshotu82epngu800 thumb 256px pcu800 dosu800 wasu800 anu800 early personal computer osu800 that featured au800 command line interface. image apple macintosh desktopu82epngu800 thumb 256px macu800 osu800 byu800 apple computer became theu800 first widespread osu800 tou800 feature au800 graphical user interface . many ofu800 itsu800 features such asu800 windows andu800 icons would later become commonplace inu800 guis. theu800 first microcomputer microcomputers didu800 notu800 have theu800 capacity oru800 need foru800 theu800 elaborate operating systems that hadu800 been developed foru800 mainframes andu800 minis; minimalistic operating systems were developed often loaded from read-only memory romu800 andu800 known asu800   resident monitor monitor monitors . oneu800 notable early disk operating system wasu800 cpu800 mu800 which wasu800 supported onu800 many early microcomputers andu800 wasu800 closely imitated byu800 microsoft 'su800 msu800-dosu800 which became wildly popular asu800 theu800 operating system chosen foru800 theu800 ibmu800 pcu800 ibmu800 ibmu800'su800 version ofu800 itu800 wasu800 called ibmu800 dosu800 oru800 pcu800 dosu800 . inu800 theu800 '80su800 apple computer incu800. nowu800 apple incu800. abandoned itsu800 popular apple iiu800 series ofu800 microcomputers tou800 introduce theu800 apple macintosh computer with anu800 innovative graphical user interface guiu800 tou800 theu800 macu800 osu800 . theu800 introduction ofu800 theu800 intel 80386 cpuu800 chip with 32u800-bitu800 architecture andu800 paging capabilities provided personal computers with theu800 ability tou800 runu800 computer multitasking multitasking operating systems like those ofu800 earlier minicomputer minicomputers andu800 mainframe computer mainframes . microsoft responded tou800 this progress byu800 hiring dave cutler whou800 hadu800 developed theu800 openvms vmsu800 operating system foru800 digital equipment corporation . heu800 would lead theu800 development ofu800 theu800 windows ntu800 operating system which continues tou800 serve asu800 theu800 basis foru800 microsoft microsoft'su800 operating systems line. steve jobs au800 cou800-founder ofu800 apple incu800. started next computer incu800. which developed theu800 nextstep operating system. nextstep would later beu800 acquired byu800 apple incu800. andu800 used along with code from freebsd asu800 theu800 core ofu800 macu800 osu800 xu800. theu800 gnuu800 project wasu800 started byu800 activist andu800 programmer richard stallman with theu800 goal ofu800 creating au800 complete free software replacement tou800 theu800 proprietary unix operating system. while theu800 project wasu800 highly successful inu800 duplicating theu800 functionality ofu800 various parts ofu800 unix development ofu800 theu800 gnuu800 hurd kernel proved tou800 beu800 unproductive. inu800 1991 finnish computer science student linus torvalds with cooperation from volunteers collaborating over theu800 internet released theu800 first version ofu800 theu800 linux kernel . itu800 wasu800 soon merged with theu800 gnuu800 user space components andu800 system software tou800 form au800 complete operating system. since then theu800 combination ofu800 theu800 twou800 major components hasu800 usually been referred tou800 asu800 simply linux byu800 theu800 software industry au800 naming convention that stallman andu800 theu800 free software foundation remain opposed tou800 preferring theu800 name gnuu800 linux. theu800 berkeley software distribution known asu800 bsdu800 operating system bsdu800 isu800 theu800 unix derivative distributed byu800 theu800 university ofu800 california berkeley starting inu800 theu800 1970s. freely distributed andu800 ported tou800 many minicomputers itu800 eventually also gained au800 following foru800 useu800 onu800 pcsu800 mainly asu800 freebsd netbsd andu800 openbsd . examples ofu800 operating systems examples ofu800 operating systems examples ofu800 operating systems unix andu800 unix-like operating systems unix andu800 unix-like operating systems unix andu800 unix-like operating systems file unix history-simpleu82epngu800 256px thumb evolution ofu800 unix systems default image unix history-simpleu82esvgu800 main unix unix wasu800 originally written inu800 assembly language. cite webu800 last ritchie first dennis title unix manual first edition urlu800 publisher lucent technologies accessdate 22u800 november 2012 kenu800 thompson wrote bu800 programming language bu800 mainly based onu800 bcpl based onu800 hisu800 experience inu800 theu800 multics project. bu800 wasu800 replaced byu800 cu800 programming language cu800 andu800 unix rewritten inu800 cu800 developed into au800 large complex family ofu800 inter-related operating systems which have been influential inu800 every modern operating system seeu800 history ofu800 operating systems history . theu800   unix-like   family isu800 au800 diverse group ofu800 operating systems with several major subu800-categories including system vu800 bsdu800 operating system bsdu800 andu800 linux . theu800 name unix isu800 au800 trademark ofu800 theu800 open group which licenses itu800 foru800 useu800 with anyu800 operating system that hasu800 been shown tou800 conform tou800 their definitions. unix-like isu800 commonly used tou800 refer tou800 theu800 large setu800 ofu800 operating systems which resemble theu800 original unix. unix-like systems runu800 onu800 au800 wide variety ofu800 computer architecture architectures. they areu800 used heavily foru800 server computing servers inu800 business asu800 well asu800 workstation workstations inu800 academic andu800 engineering environments. free software free unix variants such asu800 linux andu800 berkeley software distribution bsdu800 areu800 popular inu800 these areas. four operating systems areu800 certified byu800 theu800 theu800 open group holder ofu800 theu800 unix trademark asu800 unix. hpu800 hpu800'su800 hpu800-uxu800 andu800 ibmu800 ibmu800'su800 aixu800 operating system aixu800 areu800 both descendants ofu800 theu800 original system vu800 unix andu800 areu800 designed tou800 runu800 only onu800 their respective vendor vendor'su800 hardware. inu800 contrast sunu800 microsystems sunu800 microsystems microsystems'su800 solaris operating system canu800 runu800 onu800 multiple types ofu800 hardware including x86u800 andu800 sparc servers andu800 pcsu800. apple apple'su800 osu800 xu800 au800 replacement foru800 apple apple'su800 earlier nonu800-unix macu800 osu800 isu800 au800 hybrid kernel -based bsdu800 variant derived from nextstep mach kernel mach andu800 freebsd . unix interoperability wasu800 sought byu800 establishing theu800 posix standard. theu800 posix standard canu800 beu800 applied tou800 anyu800 operating system although itu800 wasu800 originally created foru800 various unix variants. bsdu800 andu800 itsu800 descendants bsdu800 andu800 itsu800 descendants bsdu800 andu800 itsu800 descendants image first webu800 serveru82ejpgu800 thumb right 256px theu800 cern httpd first server foru800 theu800 world wide webu800 ranu800 onu800 nextstep based onu800 bsdu800. main berkeley software distribution au800 subgroup ofu800 theu800 unix family isu800 theu800 berkeley software distribution family which includes freebsd netbsd andu800 openbsd . these operating systems areu800 most commonly found onu800 webserver webservers although they canu800 also function asu800 au800 personal computer osu800. theu800 internet owes much ofu800 itsu800 existence tou800 bsdu800 asu800 many ofu800 theu800 protocols nowu800 commonly used byu800 computers tou800 connect send andu800 receive data over au800 network were widely implemented andu800 refined inu800 bsdu800. theu800 world wide webu800 wasu800 also first demonstrated onu800 au800 number ofu800 computers running anu800 osu800 based onu800 bsdu800 called nextstep . bsdu800 hasu800 itsu800 roots inu800 unix. inu800 1974 university ofu800 california berkeley installed itsu800 first unix system. over time students andu800 staff inu800 theu800 computer science department there began adding newu800 programs tou800 make things easier such asu800 text editors. when berkely received newu800 vaxu800 computers inu800 1978 with unix installed theu800 school school'su800 undergraduates modified unix even more inu800 order tou800 take advantage ofu800 theu800 computer computer'su800 hardware possibilities. theu800 defense advanced research projects agency ofu800 theu800 usu800 united states department ofu800 defense department ofu800 defense took interest andu800 decided tou800 fund theu800 project. many schools corporations andu800 government organizations took notice andu800 started tou800 useu800 berkeley berkeley'su800 version ofu800 unix instead ofu800 theu800 official oneu800 distributed byu800 atu800&tu800. steve jobs upon leaving apple incu800. inu800 1985 formed next next incu800. au800 company that manufactured high-endu800 computers running onu800 au800 variation ofu800 bsdu800 called nextstep . oneu800 ofu800 these computers wasu800 used byu800 timu800 berners-leeu800 asu800 theu800 first webserver tou800 create theu800 world wide webu800. developers like keith bostic encouraged theu800 project tou800 replace anyu800 nonu800-free code that originated with bell labs. once this wasu800 done however atu800&tu800 sued. eventually after twou800 years ofu800 legal disputes theu800 bsdu800 project came outu800 ahead andu800 spawned au800 number ofu800 free derivatives such asu800 freebsd andu800 netbsd . osu800 xu800 osu800 xu800 osu800 xu800 main osu800 xu800 file macu800 osxu800 lion screenu82epngu800 256px thumb theu800 standard user interface ofu800 osu800 xu800  osu800 xu800  formerly macu800 osu800 xu800 isu800 au800 line ofu800 open core graphical operating systems developed marketed andu800 sold byu800 apple incu800. theu800 latest ofu800 which isu800 preu800-loaded onu800 allu800 currently shipping macintosh computers. osu800 xu800 isu800 theu800 successor tou800 theu800 original macu800 osu800 which hadu800 been apple apple'su800 primary operating system since 1984. unlike itsu800 predecessor osu800 xu800 isu800 au800 unix operating system built onu800 technology that hadu800 been developed atu800 next through theu800 second half ofu800 theu800 1980s andu800 upu800 until apple purchased theu800 company inu800 early 1997. theu800 operating system wasu800 first released inu800 1999 asu800 macu800 osu800 xu800 server 1u800u82e0u800 with au800 desktop-oriented version macu800 osu800 xu800 v10u800u82e0u800 macu800 osu800 xu800 v10u800u82e0u800 cheetah following inu800 march 2001. since then sixu800 more distinct client andu800 server editions ofu800 osu800 xu800 have been released theu800 most recent being osu800 xu800 mountain lion osu800 xu800 10u800u82e8u800 mountain lion which wasu800 first made available onu800 february 16u800 2012 foru800 developers andu800 wasu800 then released tou800 theu800 public onu800 july 25u800 2012. releases ofu800 osu800 xu800 areu800 named after bigu800 catu800 cats. prior tou800 itsu800 merging with osu800 xu800 theu800 server edition u8e28093 osu800 xu800 server u8e28093 wasu800 software architecture architecturally identical tou800 itsu800 desktop counterpart andu800 usually ranu800 onu800 apple apple'su800 line ofu800 macintosh server computing server hardware. osu800 xu800 server included work group management andu800 administration software tools that provide simplified access tou800 keyu800 network service services including au800 mail transfer agent au800 samba software samba server anu800 ldap server au800 domain name system domain name server andu800 others. with macu800 osu800 xu800 lion macu800 osu800 xu800 v10u800u82e7u800 lion allu800 server aspects ofu800 macu800 osu800 xu800 server have been integrated into theu800 client version andu800 theu800 product reu800-branded asu800 osu800 xu800 dropping macu800 from theu800 name . theu800 server tools areu800 nowu800 offered asu800 anu800 application. cite webu800 urlu800 title osu800 xu800 mountain lion&nbsp;u8e28093 move your macu800 even further ahead publisher apple date accessdate 2012-08u800-07u800 linux andu800 gnuu800 linux andu800 gnuu800 linux andu800 gnuu800 main gnuu800 linux linux kernel file ubuntu 12u800u82e04u800 final live cdu800 screenshotu82epngu800 thumb 250px ubuntu operating system ubuntu desktop linux distribution file android 4u800u82e2u800 onu800 theu800 nexus 4u800u82epngu800 thumb 180px left android operating system android au800 popular mobile operating system using theu800 linux kernel linux linux oru800 gnuu800 linux isu800 au800 unix-like operating system that wasu800 developed without anyu800 actual unix code unlike bsdu800 andu800 itsu800 variants. linux canu800 beu800 used onu800 au800 wide range ofu800 devices from supercomputers tou800 wristwatches. theu800 linux kernel isu800 released under anu800 open source software license open source license sou800 anyone canu800 read andu800 modify itsu800 code. itu800 hasu800 been modified tou800 runu800 onu800 au800 large variety ofu800 electronics. although estimates suggest that linux isu800 used onu800 1u800u82e82u800 ofu800 allu800 personal computers usage share ofu800 operating systems cite webu800 title topu800 5u800 operating systems from january tou800 april 2011 urlu800 publisher statcounter date october 2009 accessdate november 5u800 2009 itu800 hasu800 been widely adopted foru800 useu800 inu800 servers cite webu800 urlu800 title idcu800 report into server market share publisher idcu800u82ecomu800 date accessdate 2012-08u800-07u800 andu800 embedded systems cite webu800 urlu800 title linux still topu800 embedded osu800 archiveurl archivedate 2012-05u800-29u800 such asu800 cell phones . linux hasu800 superseded unix inu800 most places which date july 2010 andu800 isu800 used onu800 theu800 10u800 most powerful supercomputers inu800 theu800 world. cite webu800 first tomu800 last jermoluk urlu800 title top500 list&nbsp;u8e28093 november 2010 1u8e28093100 &#124u800; top500 supercomputing sites publisher top500u82eorgu800 date 2012-08u800-03u800 accessdate 2012-08u800-07u800 theu800 linux kernel isu800 used inu800 some popular distributions such asu800 redu800 hatu800 debian ubuntu operating system ubuntu linux mint andu800 google 'su800 android operating system android . theu800 gnuu800 project isu800 au800 mass collaboration ofu800 programmers whou800 seek tou800 create au800 completely free andu800 open operating system that wasu800 similar tou800 unix butu800 with completely original code. itu800 wasu800 started inu800 1983 byu800 richard stallman andu800 isu800 responsible foru800 many ofu800 theu800 parts ofu800 most linux variants. thousands ofu800 pieces ofu800 software foru800 virtually every operating system areu800 licensed under theu800 gnuu800 general public license . meanwhile theu800 linux kernel began asu800 au800 side project ofu800 linus torvalds au800 university student from finland. inu800 1991 torvalds began work onu800 itu800 andu800 posted information about hisu800 project onu800 au800 newsgroup foru800 computer students andu800 programmers. heu800 received au800 wave ofu800 support andu800 volunteers whou800 ended upu800 creating au800 full-fledged kernel. programmers from gnuu800 took notice andu800 members ofu800 both projects worked tou800 integrate theu800 finished gnuu800 parts with theu800 linux kernel inu800 order tou800 create au800 full-fledged operating system. google chromium osu800 google chromium osu800 google chromium osu800 main google chromium osu800 chromium isu800 anu800 operating system based onu800 theu800 linux kernel andu800 designed byu800 google . since chromium osu800 targets computer users whou800 spend most ofu800 their time onu800 theu800 internet itu800 isu800 mainly au800 webu800 browser with limited ability tou800 runu800 local applications though itu800 hasu800 au800 built-inu800 file manager andu800 media player. instead itu800 relies onu800 internet application applications oru800 webu800 appu800 apps used inu800 theu800 webu800 browser tou800 accomplish tasks such asu800 word processing. cite webu800 title chromium osu800 urlu800 publisher chromiumu82eorgu800 microsoft windows microsoft windows microsoft windows main microsoft windows file windows tou800 gou800 usbu800 driveu82epngu800 thumb theu800 usbu800 flash drive link live usbu800 microsoft windows isu800 au800 family ofu800 proprietary software proprietary operating systems designed byu800 microsoft corporation andu800 primarily targeted tou800 intel architecture based computers with anu800 estimated 88u800u82e9u800 percent total usage share onu800 webu800 connected computers. cite news title global webu800 stats urlu800 date mayu800 2011 publisher netu800 market share netu800 applications accessdate 2011-05u800-07u800 cite news title global webu800 stats urlu800 date september 2009 publisher w3counter awio webu800 services accessdate 2009-10u800-24u800 cite webu800 title operating system market share urlu800 publisher netu800 applications date october 2009 accessdate november 5u800 2009 theu800 newest version isu800 windows 8u800 foru800 workstations andu800 windows server 2012 foru800 servers. windows 7u800 recently overtook windows xpu800 asu800 most used osu800. cite webu800 title w3schoolsu82ecomu800 osu800 platform statistics urlu800 accessdate october 30u800 2011 cite webu800 title stats count global stats topu800 five operating systems urlu800 accessdate october 30u800 2011 cite webu800 title global statistics atu800 w3counteru82ecomu800 urlu800 accessdate 23u800 january 2012 microsoft windows originated inu800 1985 asu800 anu800 operating environment running onu800 topu800 ofu800 msu800-dosu800 which wasu800 theu800 standard operating system shipped onu800 most intel architecture personal computers atu800 theu800 time. inu800 1995 windows 95u800 wasu800 released which only used msu800-dosu800 asu800 au800 bootstrap. foru800 backwards compatibility win9x could runu800 real-mode msu800-dosu800 cite webu800 urlu800 title troubleshooting msu800-dosu800 compatibility mode onu800 hard disks publisher supportu82emicrosoftu82ecomu800 date accessdate 2012-08u800-07u800 cite webu800 urlu800 title using ndis 2u800 pcmcia network card drivers inu800 windows 95u800 publisher supportu82emicrosoftu82ecomu800 date accessdate 2012-08u800-07u800 andu800 16u800 bits windows 3u800u82exu800 cite webu800 urlu800 title info windows 95u800 multimedia wave device drivers must beu800 16u800 bitu800 publisher supportu82emicrosoftu82ecomu800 date accessdate 2012-08u800-07u800 drivers. windows meu800 released inu800 2000 wasu800 theu800 last version inu800 theu800 win9x family. later versions have allu800 been based onu800 theu800 windows ntu800 kernel computing kernel . current versions ofu800 windows runu800 onu800 iau800-32u800 andu800 x86u800-64u800 microprocessor microprocessors although windows 8u800 will support armu800 architecture . cite news last arthur first charles title windows 8u800 will runu800 onu800 armu800 chips - butu800 third-party apps will need rewrite urlu800 newspaper theu800 guardian inu800 theu800 past windows ntu800 supported nonu800-intel architectures. server editions ofu800 windows areu800 widely used. inu800 recent years microsoft hasu800 expended significant capital inu800 anu800 effort tou800 promote theu800 useu800 ofu800 windows asu800 au800 server operating system . however windows usage onu800 servers isu800 notu800 asu800 widespread asu800 onu800 personal computers asu800 windows competes against linux andu800 bsdu800 foru800 server market share. cite webu800 urlu800 title operating system share byu800 groups foru800 sites inu800 allu800 locations january 2009 cite webu800 urlu800 title behind theu800 idcu800 data windows still nou800. 1u800 inu800 server operating systems date 2010-02u800-26u800 publisher zdnet other other other there have been many operating systems that were significant inu800 their dayu800 butu800 areu800 nou800 longer sou800 such asu800 amigaos ; osu800 2u800 from ibmu800 andu800 microsoft; macu800 osu800 theu800 nonu800-unix precursor tou800 apple apple'su800 macu800 osu800 xu800; beos ; xtsu800-400u800 xtsu800-300u800 ; risc osu800 ; morphos andu800 freemint . some areu800 still used inu800 niche markets andu800 continue tou800 beu800 developed asu800 minority platforms foru800 enthusiast communities andu800 specialist applications. openvms formerly from digital equipment corporation decu800 isu800 still under active development byu800 hewlett-packard . yetu800 other operating systems areu800 used almost exclusively inu800 academia foru800 operating systems education oru800 tou800 dou800 research onu800 operating system concepts. au800 typical example ofu800 au800 system that fulfills both roles isu800 minix while foru800 example singularity operating system singularity isu800 used purely foru800 research. other operating systems have failed tou800 winu800 significant market share butu800 have introduced innovations that have influenced mainstream operating systems notu800 least bell labs plan 9u800 from bell labs plan 9u800 . components components components theu800 components ofu800 anu800 operating system allu800 exist inu800 order tou800 make theu800 different parts ofu800 au800 computer work together. allu800 user software needs tou800 gou800 through theu800 operating system inu800 order tou800 useu800 anyu800 ofu800 theu800 hardware whether itu800 beu800 asu800 simple asu800 au800 mouse oru800 keyboard oru800 asu800 complex asu800 anu800 internet component. kernel kernel kernel image kernel layoutu82esvgu800 thumb au800 kernel connects theu800 application software tou800 theu800 hardware ofu800 au800 computer. main kernel computing with theu800 aidu800 ofu800 theu800 firmware andu800 device driver drivers theu800 kernel provides theu800 most basic level ofu800 control over allu800 ofu800 theu800 computer computer'su800 hardware devices. itu800 manages memory access foru800 programs inu800 theu800 ramu800 itu800 determines which programs getu800 access tou800 which hardware resources itu800 sets upu800 oru800 resets theu800 cpuu800 cpuu800'su800 operating states foru800 optimal operation atu800 allu800 times andu800 itu800 organizes theu800 data foru800 long-term nonu800-volatile storage with file system systems onu800 such media asu800 disks tapes flash memory etcu800. program execution program execution program execution main process computing theu800 operating system provides anu800 interface between anu800 application program andu800 theu800 computer hardware sou800 that anu800 application program canu800 interact with theu800 hardware only byu800 obeying rules andu800 procedures programmed into theu800 operating system. theu800 operating system isu800 also au800 setu800 ofu800 services which simplify development andu800 execution ofu800 application programs. executing anu800 application program involves theu800 creation ofu800 au800 process byu800 theu800 operating system kernel computer science kernel which assigns memory space andu800 other resources establishes au800 priority foru800 theu800 process inu800 multi-tasking systems loads program binary code into memory andu800 initiates execution ofu800 theu800 application program which then interacts with theu800 user andu800 with hardware devices. interrupts interrupts interrupts main interrupt interrupt interrupts areu800 central tou800 operating systems asu800 they provide anu800 efficient wayu800 foru800 theu800 operating system tou800 interact with andu800 react tou800 itsu800 environment. theu800 alternative&nbsp;u8e28094 having theu800 operating system watch theu800 various sources ofu800 input foru800 events polling that require action&nbsp;u8e28094 canu800 beu800 found inu800 older systems with very small call stack stack stacks 50u800 oru800 60u800 bytes butu800 areu800 unusual inu800 modern systems with large stacks. interrupt -based programming isu800 directly supported byu800 most modern cpus. interrupts provide au800 computer with au800 wayu800 ofu800 automatically saving local register contexts andu800 running specific code inu800 response tou800 events. even very basic computers support hardware interrupts andu800 allow theu800 programmer tou800 specify code which mayu800 beu800 runu800 when that event takes place. when anu800 interrupt isu800 received theu800 computer computer'su800 hardware automatically suspends whatever program isu800 currently running saves itsu800 status andu800 runs computer code previously associated with theu800 interrupt; this isu800 analogous tou800 placing au800 bookmark inu800 au800 book inu800 response tou800 au800 phone call. inu800 modern operating systems interrupts areu800 handled byu800 theu800 operating system system'su800 kernel computer science kernel . interrupts mayu800 come from either theu800 computer computer'su800 hardware oru800 from theu800 running program. when au800 hardware device triggers anu800 interrupt theu800 operating system system'su800 kernel decides howu800 tou800 deal with this event generally byu800 running some processing code. theu800 amount ofu800 code being runu800 depends onu800 theu800 priority ofu800 theu800 interrupt foru800 example au800 person usually responds tou800 au800 smoke detector alarm before answering theu800 phone . theu800 processing ofu800 hardware interrupts isu800 au800 task that isu800 usually delegated tou800 software called device drivers device driver which mayu800 beu800 either part ofu800 theu800 operating system system'su800 kernel part ofu800 another program oru800 both. device drivers mayu800 then relay information tou800 au800 running program byu800 various means. au800 program mayu800 also trigger anu800 interrupt tou800 theu800 operating system. ifu800 au800 program wishes tou800 access hardware foru800 example itu800 mayu800 interrupt theu800 operating system system'su800 kernel which causes control tou800 beu800 passed back tou800 theu800 kernel. theu800 kernel will then process theu800 request. ifu800 au800 program wishes additional resources oru800 wishes tou800 shed resources such asu800 memory itu800 will trigger anu800 interrupt tou800 getu800 theu800 kernel kernel'su800 attention. modes modes modes main protected mode supervisor mode image priv ringsu82esvgu800 300px thumb right privilege rings foru800 theu800 x86u800 available inu800 protected mode . operating systems determine which processes runu800 inu800 each mode. modern cpus support multiple modes ofu800 operation. cpuu800 cpus with this capability useu800 atu800 least twou800 modes protected mode andu800 supervisor mode . theu800 supervisor mode isu800 used byu800 theu800 operating system system'su800 kernel foru800 lowu800 level tasks that need unrestricted access tou800 hardware such asu800 controlling howu800 memory isu800 written andu800 erased andu800 communication with devices like graphics cards. protected mode inu800 contrast isu800 used foru800 almost everything else. applications operate within protected mode andu800 canu800 only useu800 hardware byu800 communicating with theu800 kernel which controls everything inu800 supervisor mode. cpuu800 cpus might have other modes similar tou800 protected mode asu800 well such asu800 theu800 virtual modes inu800 order tou800 emulate older processor types such asu800 16u800-bitu800 processors onu800 au800 32u800-bitu800 oneu800 oru800 32u800-bitu800 processors onu800 au800 64u800-bitu800 oneu800. when au800 computer first starts upu800 itu800 isu800 automatically running inu800 supervisor mode . theu800 first fewu800 programs tou800 runu800 onu800 theu800 computer being theu800 bios oru800 extensible firmware interface efiu800 bootloader andu800 theu800 operating system have unlimited access tou800 hardware&nbsp;u8e28093 andu800 this isu800 required because byu800 definition initializing au800 protected environment canu800 only beu800 done outside ofu800 oneu800. however when theu800 operating system passes control tou800 another program itu800 canu800 place theu800 cpuu800 into protected mode . inu800 protected mode programs mayu800 have access tou800 au800 more limited setu800 ofu800 theu800 cpuu800 cpuu800'su800 instructions. au800 user program mayu800 leave protected mode only byu800 triggering anu800 interrupt causing control tou800 beu800 passed back tou800 theu800 kernel computer science kernel . inu800 this wayu800 theu800 operating system canu800 maintain exclusive control over things like access tou800 hardware andu800 memory. theu800 term protected mode resource generally refers tou800 oneu800 oru800 more cpuu800 registers which contain information that theu800 running program isnu800'tu800 allowed tou800 alter. attempts tou800 alter these resources generally causes au800 switch tou800 supervisor mode where theu800 operating system canu800 deal with theu800 illegal operation theu800 program wasu800 attempting foru800 example byu800 killing theu800 program . memory management memory management memory management main memory management among other things au800 multiprogramming operating system kernel computer science kernel must beu800 responsible foru800 managing allu800 system memory which isu800 currently inu800 useu800 byu800 programs. this ensures that au800 program does notu800 interfere with memory already inu800 useu800 byu800 another program. since programs time share each program must have independent access tou800 memory. cooperative memory management used byu800 many early operating systems assumes that allu800 programs make voluntary useu800 ofu800 theu800 kernel computer science kernel 'su800 memory manager andu800 dou800 notu800 exceed their allocated memory. this system ofu800 memory management isu800 almost never seen anyu800 more since programs often contain bugs which canu800 cause them tou800 exceed their allocated memory. ifu800 au800 program fails itu800 mayu800 cause memory used byu800 oneu800 oru800 more other programs tou800 beu800 affected oru800 overwritten. malicious programs oru800 viruses mayu800 purposefully alter another program program'su800 memory oru800 mayu800 affect theu800 operation ofu800 theu800 operating system itself. with cooperative memory management itu800 takes only oneu800 misbehaved program tou800 crash theu800 system. memory protection enables theu800 kernel computer science kernel tou800 limit au800 process access tou800 theu800 computer computer'su800 memory. various methods ofu800 memory protection exist including memory segmentation andu800 paging . allu800 methods require some level ofu800 hardware support such asu800 theu800 80286 mmuu800 which doesn'tu800 exist inu800 allu800 computers. inu800 both segmentation andu800 paging certain protected mode registers specify tou800 theu800 cpuu800 what memory address itu800 should allow au800 running program tou800 access. attempts tou800 access other addresses will trigger anu800 interrupt which will cause theu800 cpuu800 tou800 reu800-enter supervisor mode placing theu800 kernel computer science kernel inu800 charge. this isu800 called au800 segmentation violation oru800 segu800-vu800 foru800 short andu800 since itu800 isu800 both difficult tou800 assign au800 meaningful result tou800 such anu800 operation andu800 because itu800 isu800 usually au800 sign ofu800 au800 misbehaving program theu800 kernel computer science kernel will generally resort tou800 terminating theu800 offending program andu800 will report theu800 error. windows 3u800u82e1u800-meu800 hadu800 some level ofu800 memory protection butu800 programs could easily circumvent theu800 need tou800 useu800 itu800. au800 general protection fault would beu800 produced indicating au800 segmentation violation hadu800 occurred; however theu800 system would often crash anyway. virtual memory virtual memory virtual memory main virtual memory further page fault file virtual memoryu82esvgu800 thumb 250px many operating systems canu800 trick programs into using memory scattered around theu800 hard disk andu800 ramu800 asu800 ifu800 itu800 isu800 oneu800 continuous chunk ofu800 memory called virtual memory. theu800 useu800 ofu800 virtual memory addressing such asu800 paging oru800 segmentation means that theu800 kernel canu800 choose what memory each program mayu800 useu800 atu800 anyu800 given time allowing theu800 operating system tou800 useu800 theu800 same memory locations foru800 multiple tasks. ifu800 au800 program tries tou800 access memory that isnu800'tu800 inu800 itsu800 current range ofu800 accessible memory butu800 nonetheless hasu800 been allocated tou800 itu800 theu800 kernel will beu800 interrupted inu800 theu800 same wayu800 asu800 itu800 would ifu800 theu800 program were tou800 exceed itsu800 allocated memory. seeu800 section onu800 memory management. under unix this kind ofu800 interrupt isu800 referred tou800 asu800 au800 page fault . when theu800 kernel detects au800 page fault itu800 will generally adjust theu800 virtual memory range ofu800 theu800 program which triggered itu800 granting itu800 access tou800 theu800 memory requested. this gives theu800 kernel discretionary power over where au800 particular application application'su800 memory isu800 stored oru800 even whether oru800 notu800 itu800 hasu800 actually been allocated yetu800. inu800 modern operating systems memory which isu800 accessed less frequently canu800 beu800 temporarily stored onu800 disk oru800 other media tou800 make that space available foru800 useu800 byu800 other programs. this isu800 called paging swapping asu800 anu800 area ofu800 memory canu800 beu800 used byu800 multiple programs andu800 what that memory area contains canu800 beu800 swapped oru800 exchanged onu800 demand. virtual memory provides theu800 programmer oru800 theu800 user with theu800 perception that there isu800 au800 much larger amount ofu800 ramu800 inu800 theu800 computer than isu800 really there. cite book last stallings first william title computer organization & architecture year 2008 publisher prentice-hall ofu800 india private limited location newu800 delhi isbn 978u800-81u800-203u800-2962-1u800 page 267u800 multitasking multitasking multitasking main computer multitasking process management computing further context switch preemptive multitasking cooperative multitasking computer multitasking multitasking refers tou800 theu800 running ofu800 multiple independent computer programs onu800 theu800 same computer; giving theu800 appearance that itu800 isu800 performing theu800 tasks atu800 theu800 same time. since most computers canu800 dou800 atu800 most oneu800 oru800 twou800 things atu800 oneu800 time this isu800 generally done viau800 time-sharing which means that each program uses au800 share ofu800 theu800 computer computer'su800 time tou800 execute. anu800 operating system kernel computer science kernel contains au800 piece ofu800 software called au800 scheduling computing scheduler which determines howu800 much time each program will spend executing andu800 inu800 which order execution control should beu800 passed tou800 programs. control isu800 passed tou800 au800 process byu800 theu800 kernel which allows theu800 program access tou800 theu800 central processing unit cpuu800 andu800 memory. later control isu800 returned tou800 theu800 kernel through some mechanism sou800 that another program mayu800 beu800 allowed tou800 useu800 theu800 cpuu800. this sou800-called passing ofu800 control between theu800 kernel andu800 applications isu800 called au800 context switch . anu800 early model which governed theu800 allocation ofu800 time tou800 programs wasu800 called cooperative multitasking . inu800 this model when control isu800 passed tou800 au800 program byu800 theu800 kernel itu800 mayu800 execute foru800 asu800 long asu800 itu800 wants before explicitly returning control tou800 theu800 kernel. this means that au800 malicious oru800 malfunctioning program mayu800 notu800 only prevent anyu800 other programs from using theu800 cpuu800 butu800 itu800 canu800 hang theu800 entire system ifu800 itu800 enters anu800 infinite loop . modern operating systems extend theu800 concepts ofu800 application preemption tou800 device drivers andu800 kernel code sou800 that theu800 operating system hasu800 preemptive control over internal runu800-times asu800 well. theu800 philosophy governing preemptive multitasking isu800 that ofu800 ensuring that allu800 programs areu800 given regular time onu800 theu800 cpuu800. this implies that allu800 programs must beu800 limited inu800 howu800 much time they areu800 allowed tou800 spend onu800 theu800 cpuu800 without being interrupted. tou800 accomplish this modern operating system kernels make useu800 ofu800 au800 timed interrupt. au800 protected mode timer isu800 setu800 byu800 theu800 kernel which triggers au800 return tou800 supervisor mode after theu800 specified time hasu800 elapsed. seeu800 above sections onu800 interrupts andu800 dual mode operation. onu800 many single user operating systems cooperative multitasking isu800 perfectly adequate asu800 home computers generally runu800 au800 small number ofu800 well tested programs. theu800 amigaos isu800 anu800 exception having preu800-emptive multitasking from itsu800 very first version. windows ntu800 wasu800 theu800 first version ofu800 microsoft windows which enforced preemptive multitasking butu800 itu800 didn'tu800 reach theu800 home user market until windows xpu800 since windows ntu800 wasu800 targeted atu800 professionals . disk access andu800 file systems disk access andu800 file systems disk access andu800 file systems main virtual file system file dolphin filemanageru82epngu800 thumb 256px filesystems allow users andu800 programs tou800 organize andu800 sort files onu800 au800 computer often through theu800 useu800 ofu800 directories oru800 folders access tou800 data stored onu800 disks isu800 au800 central feature ofu800 allu800 operating systems. computers store data onu800 hard disk drives disks using computer file files which areu800 structured inu800 specific ways inu800 order tou800 allow foru800 faster access higher reliability andu800 tou800 make better useu800 outu800 ofu800 theu800 drive drive'su800 available space. theu800 specific wayu800 inu800 which files areu800 stored onu800 au800 disk isu800 called au800 file system andu800 enables files tou800 have names andu800 attributes. itu800 also allows them tou800 beu800 stored inu800 au800 hierarchy ofu800 directories oru800 folders arranged inu800 au800 directory tree . early operating systems generally supported au800 single type ofu800 disk drive andu800 only oneu800 kind ofu800 file system. early file systems were limited inu800 their capacity speed andu800 inu800 theu800 kinds ofu800 file names andu800 directory structures they could useu800. these limitations often reflected limitations inu800 theu800 operating systems they were designed foru800 making itu800 very difficult foru800 anu800 operating system tou800 support more than oneu800 file system. while many simpler operating systems support au800 limited range ofu800 options foru800 accessing storage systems operating systems like unix andu800 linux support au800 technology known asu800 au800 virtual file system oru800 vfsu800. anu800 operating system such asu800 unix supports au800 wide array ofu800 storage devices regardless ofu800 their design oru800 file system systems allowing them tou800 beu800 accessed through au800 common application programming interface apiu800 . this makes itu800 unnecessary foru800 programs tou800 have anyu800 knowledge about theu800 device they areu800 accessing. au800 vfsu800 allows theu800 operating system tou800 provide programs with access tou800 anu800 unlimited number ofu800 devices with anu800 infinite variety ofu800 file systems installed onu800 them through theu800 useu800 ofu800 specific device driver drivers andu800 file system drivers. au800 connected data storage device storage device such asu800 au800 hard drive isu800 accessed through au800 device driver . theu800 device driver understands theu800 specific language ofu800 theu800 drive andu800 isu800 able tou800 translate that language into au800 standard language used byu800 theu800 operating system tou800 access allu800 disk drives. onu800 unix this isu800 theu800 language ofu800 block device devices. when theu800 kernel hasu800 anu800 appropriate device driver inu800 place itu800 canu800 then access theu800 contents ofu800 theu800 disk drive inu800 rawu800 format which mayu800 contain oneu800 oru800 more file systems. au800 file system driver isu800 used tou800 translate theu800 commands used tou800 access each specific file system into au800 standard setu800 ofu800 commands that theu800 operating system canu800 useu800 tou800 talk tou800 allu800 file systems. programs canu800 then deal with these file systems onu800 theu800 basis ofu800 filenames andu800 directories folders contained within au800 hierarchical structure. they canu800 create delete open andu800 close files asu800 well asu800 gather various information about them including access permissions size free space andu800 creation andu800 modification dates. various differences between file systems make supporting allu800 file systems difficult. allowed characters inu800 file names case sensitivity andu800 theu800 presence ofu800 various kinds ofu800 file attribute attributes makes theu800 implementation ofu800 au800 single interface foru800 every file system au800 daunting task. operating systems tend tou800 recommend using andu800 sou800 support natively file systems specifically designed foru800 them; foru800 example ntfs inu800 windows andu800 ext3 andu800 reiserfs inu800 linux. however inu800 practice third party drives areu800 usually available tou800 give support foru800 theu800 most widely used file systems inu800 most general-purpose operating systems foru800 example ntfs isu800 available inu800 linux through ntfs-3gu800 andu800 ext2 3u800 andu800 reiserfs areu800 available inu800 windows through third-party software . support foru800 file systems isu800 highly varied among modern operating systems although there areu800 several common file systems which almost allu800 operating systems include support andu800 drivers foru800. operating systems vary onu800 file system support andu800 onu800 theu800 disk formats they mayu800 beu800 installed onu800. under windows each file system isu800 usually limited inu800 application tou800 certain media; foru800 example cdsu800 must useu800 isou800 9660 oru800 universal disk format udfu800 andu800 asu800 ofu800 windows vista ntfs isu800 theu800 only file system which theu800 operating system canu800 beu800 installed onu800. itu800 isu800 possible tou800 install linux onto many types ofu800 file systems. unlike other operating systems linux andu800 unix allow anyu800 file system tou800 beu800 used regardless ofu800 theu800 media itu800 isu800 stored inu800 whether itu800 isu800 au800 hard drive au800 disc cdu800 dvdu800... au800 usbu800 flash drive oru800 even contained within au800 file located onu800 another file system. device drivers device drivers device drivers main device driver au800 device driver isu800 au800 specific type ofu800 computer software developed tou800 allow interaction with hardware devices. typically this constitutes anu800 interface foru800 communicating with theu800 device through theu800 specific computer busu800 oru800 communications subsystem that theu800 hardware isu800 connected tou800 providing commands tou800 andu800 oru800 receiving data from theu800 device andu800 onu800 theu800 other endu800 theu800 requisite interfaces tou800 theu800 operating system andu800 software applications. itu800 isu800 au800 specialized hardware-dependent computer program which isu800 also operating system specific that enables another program typically anu800 operating system oru800 applications software package oru800 computer program running under theu800 operating system kernel tou800 interact transparently with au800 hardware device andu800 usually provides theu800 requisite interrupt handling necessary foru800 anyu800 necessary asynchronous time-dependent hardware interfacing needs. theu800 keyu800 design goal ofu800 device drivers isu800 abstraction . every model ofu800 hardware even within theu800 same class ofu800 device isu800 different. newer models also areu800 released byu800 manufacturers that provide more reliable oru800 better performance andu800 these newer models areu800 often controlled differently. computers andu800 their operating systems cannot beu800 expected tou800 know howu800 tou800 control every device both nowu800 andu800 inu800 theu800 future. tou800 solve this problem operating systems essentially dictate howu800 every type ofu800 device should beu800 controlled. theu800 function ofu800 theu800 device driver isu800 then tou800 translate these operating system mandated function calls into device specific calls. inu800 theory au800 newu800 device which isu800 controlled inu800 au800 newu800 manner should function correctly ifu800 au800 suitable driver isu800 available. this newu800 driver will ensure that theu800 device appears tou800 operate asu800 usual from theu800 operating system system'su800 point ofu800 view. under versions ofu800 windows before vista andu800 versions ofu800 linux before 2u800u82e6u800 allu800 driver execution wasu800 cou800-operative meaning that ifu800 au800 driver entered anu800 infinite loop itu800 would freeze theu800 system. more recent revisions ofu800 these operating systems incorporate kernel preemption where theu800 kernel interrupts theu800 driver tou800 give itu800 tasks andu800 then separates itself from theu800 process until itu800 receives au800 response from theu800 device driver oru800 gives itu800 more tasks tou800 dou800. networking networking networking main computer network currently most operating systems support au800 variety ofu800 networking protocols hardware andu800 applications foru800 using them. this means that computers running dissimilar operating systems canu800 participate inu800 au800 common computer network network foru800 sharing resources such asu800 remote procedure call computing files printers andu800 scanners using either wired oru800 wireless connections. networks canu800 essentially allow au800 computer computer'su800 operating system tou800 access theu800 resources ofu800 au800 remote computer tou800 support theu800 same functions asu800 itu800 could ifu800 those resources were connected directly tou800 theu800 local computer. this includes everything from simple communication tou800 using networked file systems oru800 even sharing another computer computer'su800 graphics oru800 sound hardware. some network services allow theu800 resources ofu800 au800 computer tou800 beu800 accessed transparently such asu800 secure shell sshu800 which allows networked users direct access tou800 au800 computer computer'su800 command line interface. client server networking allows au800 program onu800 au800 computer called au800 client tou800 connect viau800 au800 network tou800 another computer called au800 server. servers offer oru800 host various services tou800 other network computers andu800 users. these services areu800 usually provided through ports oru800 numbered access points beyond theu800 server server'su800 ipu800 address network address . each port number isu800 usually associated with au800 maximum ofu800 oneu800 running program which isu800 responsible foru800 handling requests tou800 that port. au800 daemon being au800 user program canu800 inu800 turn access theu800 local hardware resources ofu800 that computer byu800 passing requests tou800 theu800 operating system kernel. many operating systems support oneu800 oru800 more vendor-specific oru800 open networking protocols asu800 well foru800 example systems network architecture snau800 onu800 ibmu800 systems decnet onu800 systems from digital equipment corporation andu800 microsoft-specific protocols server message block smbu800 onu800 windows. specific protocols foru800 specific tasks mayu800 also beu800 supported such asu800 network file system protocol nfsu800 foru800 file access. protocols like esound oru800 esdu800 canu800 beu800 easily extended over theu800 network tou800 provide sound from local applications onu800 au800 remote system system'su800 sound hardware. security security security main computer security au800 computer being secure depends onu800 au800 number ofu800 technologies working properly. au800 modern operating system provides access tou800 au800 number ofu800 resources which areu800 available tou800 software running onu800 theu800 system andu800 tou800 external devices like networks viau800 theu800 kernel. theu800 operating system must beu800 capable ofu800 distinguishing between requests which should beu800 allowed tou800 beu800 processed andu800 others which should notu800 beu800 processed. while some systems mayu800 simply distinguish between privileged andu800 nonu800-privileged systems commonly have au800 form ofu800 requester  identity  such asu800 au800 user name. tou800 establish identity there mayu800 beu800 au800 process ofu800  authentication . often au800 username must beu800 quoted andu800 each username mayu800 have au800 password. other methods ofu800 authentication such asu800 magnetic cards oru800 biometric data might beu800 used instead. inu800 some cases especially connections from theu800 network resources mayu800 beu800 accessed with nou800 authentication atu800 allu800 such asu800 reading files over au800 network share . also covered byu800 theu800 concept ofu800 requester  identity  isu800  authorization ; theu800 particular services andu800 resources accessible byu800 theu800 requester once logged into au800 system areu800 tied tou800 either theu800 requester requester'su800 user account oru800 tou800 theu800 variously configured groups ofu800 users tou800 which theu800 requester belongs. inu800 addition tou800 theu800 allow disallow model ofu800 security au800 system with au800 high level ofu800 security will also offer auditing options. these would allow tracking ofu800 requests foru800 access tou800 resources such asu800 whou800 hasu800 been reading this file . internal security oru800 security from anu800 already running program isu800 only possible ifu800 allu800 possibly harmful requests must beu800 carried outu800 through interrupts tou800 theu800 operating system kernel. ifu800 programs canu800 directly access hardware andu800 resources they cannot beu800 secured. external security involves au800 request from outside theu800 computer such asu800 au800 login atu800 au800 connected console oru800 some kind ofu800 network connection. external requests areu800 often passed through device drivers tou800 theu800 operating system system'su800 kernel where they canu800 beu800 passed onto applications oru800 carried outu800 directly. security ofu800 operating systems hasu800 long been au800 concern because ofu800 highly sensitive data held onu800 computers both ofu800 au800 commercial andu800 military nature. theu800 united states government ofu800 theu800 united states government united states department ofu800 defense department ofu800 defense dodu800 created theu800   trusted computer system evaluation criteria   tcsec which isu800 au800 standard that sets basic requirements foru800 assessing theu800 effectiveness ofu800 security. this became ofu800 vital importance tou800 operating system makers because theu800 tcsec wasu800 used tou800 evaluate classify andu800 select trusted operating system systems being considered foru800 theu800 processing storage andu800 retrieval ofu800 sensitive oru800 classified information . network services include offerings such asu800 file sharing print services email webu800 sites andu800 file transfer protocol protocols ftpu800 most ofu800 which canu800 have compromised security. atu800 theu800 front line ofu800 security areu800 hardware devices known asu800 firewall networking firewalls oru800 intrusion detection prevention systems. atu800 theu800 operating system level there areu800 au800 number ofu800 software firewalls available asu800 well asu800 intrusion detection prevention systems. most modern operating systems include au800 software firewall which isu800 enabled byu800 default. au800 software firewall canu800 beu800 configured tou800 allow oru800 deny network traffic tou800 oru800 from au800 service oru800 application running onu800 theu800 operating system. therefore oneu800 canu800 install andu800 beu800 running anu800 insecure service such asu800 telnet oru800 ftpu800 andu800 notu800 have tou800 beu800 threatened byu800 au800 security breach because theu800 firewall would deny allu800 traffic trying tou800 connect tou800 theu800 service onu800 that port. anu800 alternative strategy andu800 theu800 only sandbox computer security sandbox strategy available inu800 systems that dou800 notu800 meet theu800 popek andu800 goldberg virtualization requirements isu800 theu800 operating system notu800 running user programs asu800 native code butu800 instead either emulator emulates au800 processor oru800 provides au800 host foru800 au800 pu800-code machine pu800-code based system such asu800 java. internal security isu800 especially relevant foru800 multi-user systems; itu800 allows each user ofu800 theu800 system tou800 have private files that theu800 other users cannot tamper with oru800 read. internal security isu800 also vital ifu800 auditing isu800 tou800 beu800 ofu800 anyu800 useu800 since au800 program canu800 potentially bypass theu800 operating system inclusive ofu800 bypassing auditing. user interface user interface user interface file command lineu82epngu800 thumb 256px au800 screenshot ofu800 theu800 bash unix shell bourne again shell command line. each command isu800 typed outu800 after theu800 'prompt' andu800 then itsu800 output appears below working itsu800 wayu800 down theu800 screen. theu800 current command prompt isu800 atu800 theu800 bottom. main operating system user interface every computer that isu800 tou800 beu800 operated byu800 anu800 individual requires au800 user interface . theu800 user interface isu800 usually referred tou800 asu800 au800 shell computing shell andu800 isu800 essential ifu800 human interaction isu800 tou800 beu800 supported. theu800 user interface views theu800 directory structure andu800 requests services from theu800 operating system that will acquire data from input device input hardware devices such asu800 au800 keyboard computing keyboard mouse computing mouse oru800 credit card credit card reader andu800 requests operating system services tou800 display command-line interface#command prompt prompt prompts status message messages andu800 such onu800 output device output hardware devices such asu800 au800 computer monitor video monitor oru800 printer computing printer . theu800 twou800 most common forms ofu800 au800 user interface have historically been theu800 command-line interface where computer commands areu800 typed outu800 line-byu800-line andu800 theu800 graphical user interface where au800 visual environment most commonly au800 wimp computing wimp isu800 present. graphical user interfaces graphical user interfaces graphical user interfaces file kdeu800 4u800u82epngu800 thumb left 256px au800 screenshot ofu800 theu800 kdeu800 plasma desktop graphical user interface. programs take theu800 form ofu800 images onu800 theu800 screen andu800 theu800 files folders directories andu800 applications take theu800 form ofu800 icons andu800 symbols. au800 mouse isu800 used tou800 navigate theu800 computer. most ofu800 theu800 modern computer systems support graphical user interface interfaces guiu800 andu800 often include them. inu800 some computer systems such asu800 theu800 original implementation ofu800 macu800 osu800 theu800 guiu800 isu800 integrated into theu800 kernel computer science kernel . while technically au800 graphical user interface isu800 notu800 anu800 operating system service incorporating support foru800 oneu800 into theu800 operating system kernel canu800 allow theu800 guiu800 tou800 beu800 more responsive byu800 reducing theu800 number ofu800 context switch switches required foru800 theu800 guiu800 tou800 perform itsu800 output functions. other operating systems areu800 modularity programming modular separating theu800 graphics subsystem from theu800 kernel andu800 theu800 operating system. inu800 theu800 1980s unix vmsu800 andu800 many others hadu800 operating systems that were built this wayu800. linux andu800 macu800 osu800 xu800 areu800 also built this wayu800. modern releases ofu800 microsoft windows such asu800 windows vista implement au800 graphics subsystem that isu800 mostly inu800 user-space; however theu800 graphics drawing routines ofu800 versions between windows ntu800 4u800u82e0u800 andu800 windows server 2003 exist mostly inu800 kernel space. windows 9xu800 hadu800 very little distinction between theu800 interface andu800 theu800 kernel. many computer operating systems allow theu800 user tou800 install oru800 create anyu800 user interface they desire. theu800 xu800&nbsp;window system inu800 conjunction with gnome oru800 kdeu800 plasma desktop isu800 au800 commonly found setup onu800 most unix andu800 unix-like bsdu800 linux solaris systems. au800 number ofu800 windows shell replacement replacements have been released foru800 microsoft windows which offer alternatives tou800 theu800 included windows shell butu800 theu800 shell itself cannot beu800 separated from windows. numerous unix-based guis have existed over time most derived from x11u800. competition among theu800 various vendors ofu800 unix hpu800 ibmu800 sunu800 ledu800 tou800 much fragmentation though anu800 effort tou800 standardize inu800 theu800 1990s tou800 common open software environment cose andu800 common desktop environment cdeu800 failed foru800 various reasons andu800 were eventually eclipsed byu800 theu800 widespread adoption ofu800 gnome andu800 ku800 desktop environment . prior tou800 free software -based toolkits andu800 desktop environments motif wasu800 theu800 prevalent toolkit desktop combination andu800 wasu800 theu800 basis upon which cdeu800 wasu800 developed . graphical user interfaces evolve over time. foru800 example windows hasu800 modified itsu800 user interface almost every time au800 newu800 major version ofu800 windows isu800 released andu800 theu800 macu800&nbsp;osu800 guiu800 changed dramatically with theu800 introduction ofu800 macu800&nbsp;osu800&nbsp;xu800 inu800 1999. poisson kenu800. chronology ofu800 personal computer software . retrieved onu800 2008-05u800-07u800. last checked onu800 2009-03u800-30u800. real-time operating systems real-time operating systems real-time operating systems main real-time operating system au800 real-time operating system rtos isu800 anu800 operating system intended foru800 applications with fixed deadlines real-time computing . such applications include some small embedded system systems automobile engine controllers industrial robots spacecraft industrial control andu800 some large-scale computing systems. anu800 early example ofu800 au800 large-scale real-time operating system wasu800 transaction processing facility developed byu800 american airlines andu800 international business machines ibmu800 foru800 theu800 sabre airline reservations system . embedded systems that have fixed deadlines useu800 au800 real-time operating system such asu800 vxworks pikeos ecos qnxu800 montavista linux andu800 rtlinux . windows ceu800 isu800 au800 real-time operating system that shares similar apis tou800 desktop windows butu800 shares none ofu800 desktop windows codebase. citation needed date march 2009 symbian osu800 also hasu800 anu800 rtos kernel eka2 starting with version 8u800u82e0bu800. some embedded systems useu800 operating systems such asu800 palm osu800 bsdu800 operating system bsdu800 andu800 linux although such operating systems dou800 notu800 support real-time computing. operating system development asu800 au800 hobby operating system development asu800 au800 hobby operating system development asu800 au800 hobby seeu800 also hobbyist operating system development operating system development isu800 oneu800 ofu800 theu800 most complicated activities inu800 which au800 computing hobbyist mayu800 engage. au800 hobby operating system mayu800 beu800 classified asu800 oneu800 whose code hasu800 notu800 been directly derived from anu800 existing operating system andu800 hasu800 fewu800 users andu800 software development active developers . cite webu800 urlu800 work osnews title myu800 osu800 isu800 less hobby than yours date december 21u800 2009 accessdate december 21u800 2009 inu800 some cases hobby development isu800 inu800 support ofu800 au800 homebrew computer club homebrew computing device foru800 example au800 simple single-board computer powered byu800 au800 6502 microprocessor . oru800 development mayu800 beu800 foru800 anu800 architecture already inu800 widespread useu800. operating system development mayu800 come from entirely newu800 concepts oru800 mayu800 commence byu800 modeling anu800 existing operating system. inu800 either case theu800 hobbyist isu800 hisu800 heru800 ownu800 developer oru800 mayu800 interact with au800 small andu800 sometimes unstructured group ofu800 individuals whou800 have like interests. examples ofu800 au800 hobby operating system include reactos andu800 syllable operating system syllable . diversity ofu800 operating systems andu800 portability diversity ofu800 operating systems andu800 portability diversity ofu800 operating systems andu800 portability application software isu800 generally written foru800 useu800 onu800 au800 specific operating system andu800 sometimes even foru800 specific hardware. when porting theu800 application tou800 runu800 onu800 another osu800 theu800 functionality required byu800 that application mayu800 beu800 implemented differently byu800 that osu800 theu800 names ofu800 functions meaning ofu800 arguments etcu800. requiring theu800 application tou800 beu800 adapted changed oru800 otherwise software maintenance maintained . --there really ought tou800 beu800 au800 discussion ofu800  software modules  somewhere such asu800 those that areu800 neither apiu800 apiu800'su800 noru800 plug-insu800 notu800 sure what those areu800 butu800 which areu800 either hard onu800 cartridge soft onu800 diskette oru800 otherwise installable byu800 downloading . -- this cost inu800 supporting operating systems diversity canu800 beu800 avoided byu800 instead writing applications against software platform platforms like java software platform java oru800 qtu800 toolkit qtu800 . these abstractions have already borne theu800 cost ofu800 adaptation tou800 specific operating systems andu800 their system library system libraries . another approach isu800 foru800 operating system vendors tou800 adopt standards. foru800 example posix andu800 operating system abstraction layer osu800 abstraction layer layers provide commonalities that reduce porting costs. seeu800 also seeu800 also seeu800 also multicol comparison ofu800 operating systems mobile device mobile operating system hypervisor interruptible operating system list ofu800 important publications inu800 computer science#operating systems list ofu800 important publications inu800 operating systems list ofu800 operating systems microcontroller multicol-break portal computer science information technology computer networking network operating system object-oriented operating system operating system projects live cdu800 system image timeline ofu800 operating systems usage share ofu800 operating systems multicol-endu800 references references references reflist colwidth 30em further reading further reading further reading refbegin cite journal last auslander first marc au800. coauthors larkin david cu800.; scherr allan lu800. title theu800 evolution ofu800 theu800 mvsu800 operating system publisher ibmu800 ju800. research & development year 1981 urlu800 cite book last deitel first harvey mu800. coauthors deitel paul; choffnes david title operating systems publisher pearson prentice hall year isbn 978u800-0u800-13u800-092641-8u800 cite book last bicu800 first lubomur fu800. coauthors shaw alan cu800. title operating systems publisher prentice hall year 2003 location pearson cite book last silberschatz first aviu800 coauthors galvin peter; gagne greg title operating systems concepts publisher john wiley & sons year 2008 isbn 0u800-470u800-12872-0u800 ou800'brien ju800u82eau800. & marakas gu800u82emu800. 2011 . management information systems. 10eu800. mcgraw-hill irwin cite book last leva first alberto coauthors maggio martina; papadopoulos alessandro vittorio; terraneo federico title control-based operating system design publisher ietu800 year 2013 isbn 978u800-1u800-84919-609u800-3u800 refend external links external links external links wiktionary commons category screenshots byu800 operating system screenshots ofu800 operating systems wikiversity atu800 topic operating systems operating systems dmoz computers software operating_systems operating systems multics history andu800 theu800 history ofu800 operating systems howu800 stuff works&nbsp;u8e28093 operating systems help finding your operating system type andu800 version operating system systems defaultsort operating system category operating systems category american inventions link gau800 nou800 